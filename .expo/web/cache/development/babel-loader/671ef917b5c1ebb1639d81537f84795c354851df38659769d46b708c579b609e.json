{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport { Text, Button } from '@rneui/themed';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Matching(_ref) {\n  var route = _ref.route;\n  var _route$params = route.params,\n    triviaName = _route$params.triviaName,\n    triviaItems = _route$params.triviaItems;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    matchedItems = _useState2[0],\n    setMatchedItems = _useState2[1];\n  var handleMatch = function handleMatch(option, value, index) {\n    var matchedItem = {\n      option: option,\n      value: value,\n      index: index\n    };\n    var matchedItemIndex = matchedItems.findIndex(function (item) {\n      return item.index === index;\n    });\n    if (matchedItemIndex >= 0) {\n      var updatedMatchedItems = _toConsumableArray(matchedItems);\n      updatedMatchedItems[matchedItemIndex] = matchedItem;\n      setMatchedItems(updatedMatchedItems);\n    } else {\n      setMatchedItems([].concat(_toConsumableArray(matchedItems), [matchedItem]));\n    }\n  };\n  var handleCheckAnswers = function handleCheckAnswers() {\n    var numMatched = 0;\n    var numCorrect = 0;\n    triviaItems.forEach(function (item, index) {\n      var matchedItem = matchedItems.find(function (m) {\n        return m.index === index;\n      });\n      if (matchedItem) {\n        numMatched++;\n        if (item.option === matchedItem.option && item.value === matchedItem.value) {\n          numCorrect++;\n        }\n      }\n    });\n    if (numMatched === triviaItems.length) {\n      var result = {\n        matchedItems: matchedItems,\n        isAllCorrect: numCorrect === triviaItems.length\n      };\n      navigation.navigate('Summary', {\n        result: result\n      });\n    } else {\n      alert('Not all items are matched.');\n    }\n  };\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return _jsxs(View, {\n      style: {\n        marginBottom: 16\n      },\n      children: [_jsx(Text, {\n        style: {\n          fontSize: 20,\n          fontWeight: 'bold',\n          marginBottom: 8\n        },\n        children: item.prompt\n      }), _jsxs(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-between'\n        },\n        children: [_jsx(View, {\n          style: {\n            flex: 1,\n            marginRight: 8\n          },\n          children: item.answer.map(function (option, index) {\n            return _jsx(TouchableOpacity, {\n              style: {\n                backgroundColor: matchedItems.find(function (matchedItem) {\n                  return matchedItem.option === option.option && matchedItem.value === null;\n                }) ? 'orange' : 'white',\n                borderWidth: 1,\n                borderColor: 'black',\n                padding: 16,\n                marginBottom: 8,\n                borderRadius: 8\n              },\n              onPress: function onPress() {\n                return handleMatch(option.option, null);\n              },\n              children: _jsx(Text, {\n                style: {\n                  textAlign: 'center'\n                },\n                children: option.option\n              })\n            }, item.prompt + \"_\" + option.option);\n          })\n        }), _jsx(View, {\n          style: {\n            flex: 1,\n            marginLeft: 8\n          },\n          children: item.answer.map(function (value, index) {\n            return _jsx(TouchableOpacity, {\n              style: {\n                backgroundColor: selectedValue === value.value ? 'yellow' : matchedItems.find(function (matchedItem) {\n                  return matchedItem.option === null && matchedItem.value === value.value;\n                }) ? 'orange' : 'white',\n                borderWidth: 1,\n                borderColor: 'black',\n                padding: 16,\n                marginBottom: 8,\n                borderRadius: 8\n              },\n              onPress: function onPress() {\n                return handleMatch(null, value.value);\n              },\n              children: _jsx(Text, {\n                style: {\n                  textAlign: 'center'\n                },\n                children: value.value\n              })\n            }, item.prompt + \"_\" + value.value);\n          })\n        })]\n      })]\n    });\n  };\n  return _jsxs(View, {\n    style: {\n      padding: 16\n    },\n    children: [_jsx(Text, {\n      style: {\n        fontSize: 24,\n        fontWeight: 'bold',\n        marginBottom: 16\n      },\n      children: triviaName\n    }), _jsx(FlatList, {\n      data: triviaItems,\n      renderItem: renderItem,\n      keyExtractor: function keyExtractor(item) {\n        return item.prompt;\n      }\n    }), _jsx(View, {\n      style: {\n        marginTop: 16\n      },\n      children: _jsx(Button, {\n        title: \"Check Answers\",\n        onPress: handleCheckAnswers\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","Text","Button","View","FlatList","TouchableOpacity","jsx","_jsx","jsxs","_jsxs","Matching","_ref","route","_route$params","params","triviaName","triviaItems","_useState","_useState2","_slicedToArray","matchedItems","setMatchedItems","handleMatch","option","value","index","matchedItem","matchedItemIndex","findIndex","item","updatedMatchedItems","_toConsumableArray","concat","handleCheckAnswers","numMatched","numCorrect","forEach","find","m","length","result","isAllCorrect","navigation","navigate","alert","renderItem","_ref2","style","marginBottom","children","fontSize","fontWeight","prompt","flexDirection","justifyContent","flex","marginRight","answer","map","backgroundColor","borderWidth","borderColor","padding","borderRadius","onPress","textAlign","marginLeft","selectedValue","data","keyExtractor","marginTop","title"],"sources":["/Users/arianagarciafundora/Desktop/todo-app/src/components/Matching/Matching.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { Text, Button } from '@rneui/themed'\nimport { View, FlatList, TouchableOpacity } from 'react-native'\n\n\nexport default function Matching({ route }) {\n  const { triviaName, triviaItems } = route.params;\n\n  const [matchedItems, setMatchedItems] = useState([]);\n\n  const handleMatch = (option, value, index) => {\n    const matchedItem = { option, value, index };\n    const matchedItemIndex = matchedItems.findIndex(\n      (item) => item.index === index\n    );\n    if (matchedItemIndex >= 0) {\n      // Replace existing matched item\n      const updatedMatchedItems = [...matchedItems];\n      updatedMatchedItems[matchedItemIndex] = matchedItem;\n      setMatchedItems(updatedMatchedItems);\n    } else {\n      // Add new matched item\n      setMatchedItems([...matchedItems, matchedItem]);\n    }\n  }\n  \n\n  const handleCheckAnswers = () => {\n    let numMatched = 0;\n    let numCorrect = 0;\n  \n    triviaItems.forEach((item, index) => {\n      const matchedItem = matchedItems.find((m) => m.index === index);\n      if (matchedItem) {\n        numMatched++;\n        if (\n          item.option === matchedItem.option &&\n          item.value === matchedItem.value\n        ) {\n          numCorrect++;\n        }\n      }\n    });\n  \n    if (numMatched === triviaItems.length) {\n      const result = {\n        matchedItems: matchedItems,\n        isAllCorrect: numCorrect === triviaItems.length,\n      };\n      navigation.navigate('Summary', { result });\n    } else {\n      alert('Not all items are matched.');\n    }\n  };\n\n  const renderItem = ({ item }) => (\n    <View style={{ marginBottom: 16 }}>\n      <Text style={{ fontSize: 20, fontWeight: 'bold', marginBottom: 8 }}>\n        {item.prompt}\n      </Text>\n      <View style={{ flexDirection: 'row', justifyContent: 'space-between' }}>\n        <View style={{ flex: 1, marginRight: 8 }}>\n          {item.answer.map((option, index) => (\n            <TouchableOpacity\n              key={`${item.prompt}_${option.option}`}\n              style={{\n                backgroundColor: matchedItems.find(\n                  (matchedItem) =>\n                    matchedItem.option === option.option && matchedItem.value === null\n                )\n                  ? 'orange'\n                  : 'white',\n                borderWidth: 1,\n                borderColor: 'black',\n                padding: 16,\n                marginBottom: 8,\n                borderRadius: 8\n              }}\n              onPress={() => handleMatch(option.option, null)}>\n              <Text style={{ textAlign: 'center' }}>{option.option}</Text>\n            </TouchableOpacity>\n          ))}\n        </View>\n        <View style={{ flex: 1, marginLeft: 8 }}>\n          {item.answer.map((value, index) => (\n            <TouchableOpacity\n              key={`${item.prompt}_${value.value}`}\n              style={{\n                backgroundColor:\n                  selectedValue === value.value ? 'yellow' : matchedItems.find(\n                      (matchedItem) =>\n                        matchedItem.option === null &&\n                        matchedItem.value === value.value\n                    )\n                  ? 'orange'\n                  : 'white',\n                borderWidth: 1,\n                borderColor: 'black',\n                padding: 16,\n                marginBottom: 8,\n                borderRadius: 8\n              }}\n              onPress={() => handleMatch(null, value.value)}>\n              <Text style={{ textAlign: 'center' }}>{value.value}</Text>\n            </TouchableOpacity>\n          ))}\n        </View>\n      </View>\n    </View>\n  );\n\n  return (\n    <View style={{ padding: 16 }}>\n      <Text style={{ fontSize: 24, fontWeight: 'bold', marginBottom: 16 }}>{triviaName}</Text>\n      <FlatList data={triviaItems} renderItem={renderItem} keyExtractor={(item) => item.prompt} />\n      <View style={{ marginTop: 16 }}>\n        <Button title=\"Check Answers\" onPress={handleCheckAnswers} />\n      </View>\n    </View>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}