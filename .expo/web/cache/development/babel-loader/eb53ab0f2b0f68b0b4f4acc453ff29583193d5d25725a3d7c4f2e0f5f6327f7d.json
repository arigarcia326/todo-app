{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport { Text, Button } from '@rneui/themed';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Matching(_ref) {\n  var route = _ref.route;\n  var _route$params = route.params,\n    triviaName = _route$params.triviaName,\n    triviaItems = _route$params.triviaItems;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    matchedItems = _useState2[0],\n    setMatchedItems = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedOption = _useState4[0],\n    setSelectedOption = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    selectedValue = _useState6[0],\n    setSelectedValue = _useState6[1];\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    selectedItems = _useState8[0],\n    setSelectedItems = _useState8[1];\n  var handleMatch = function handleMatch(option, value, index) {\n    var selectedItem = {\n      option: option,\n      value: value,\n      index: index\n    };\n    var alreadySelected = selectedItems.find(function (item) {\n      return item.index === index;\n    });\n    if (alreadySelected) {\n      setSelectedItems(selectedItems.filter(function (item) {\n        return item.index !== index;\n      }));\n    } else if (selectedItems.length < 2) {\n      setSelectedItems([].concat(_toConsumableArray(selectedItems), [selectedItem]));\n    }\n  };\n  var handleCheckAnswers = function handleCheckAnswers() {\n    var isAllMatched = matchedItems.length === triviaItems.length;\n    if (isAllMatched) {\n      var isAllCorrect = matchedItems.every(function (item) {\n        return triviaItems.filter(function (t) {\n          return t.option === item.option && t.value === item.value;\n        }).length > 0;\n      });\n      var result = {\n        matchedItems: matchedItems,\n        isAllCorrect: isAllCorrect\n      };\n      navigation.navigate('Summary', {\n        result: result\n      });\n    } else {\n      alert('Not all items are matched.');\n    }\n  };\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return _jsxs(View, {\n      style: {\n        marginBottom: 16\n      },\n      children: [_jsx(Text, {\n        style: {\n          fontSize: 20,\n          fontWeight: 'bold',\n          marginBottom: 8\n        },\n        children: item.prompt\n      }), _jsxs(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-between'\n        },\n        children: [_jsx(View, {\n          style: {\n            flex: 1,\n            marginRight: 8\n          },\n          children: item.answer.map(function (option, index) {\n            var isSelected = selectedItems.some(function (item) {\n              return item.option === option.option;\n            });\n            var isMatched = matchedItems.some(function (item) {\n              return item.option === option.option;\n            });\n            return _jsx(TouchableOpacity, {\n              style: {\n                backgroundColor: isSelected ? 'yellow' : isMatched ? 'green' : 'white',\n                borderWidth: 1,\n                borderColor: 'black',\n                padding: 16,\n                marginBottom: 8,\n                borderRadius: 8\n              },\n              onPress: function onPress() {\n                var _item$answer$selected, _selectedItems$;\n                return handleMatch(option.option, (_item$answer$selected = item.answer[(_selectedItems$ = selectedItems[0]) == null ? void 0 : _selectedItems$.index]) == null ? void 0 : _item$answer$selected.value, index);\n              },\n              children: _jsx(Text, {\n                style: {\n                  textAlign: 'center'\n                },\n                children: option.option\n              })\n            }, item.prompt + \"_\" + option.option);\n          })\n        }), _jsx(View, {\n          style: {\n            flex: 1,\n            marginLeft: 8\n          },\n          children: item.answer.map(function (value, index) {\n            var isSelected = selectedItems.some(function (item) {\n              return item.index === index;\n            });\n            var isMatched = matchedItems.some(function (item) {\n              return item.value === value.value;\n            });\n            return _jsx(TouchableOpacity, {\n              style: {\n                backgroundColor: isSelected ? 'yellow' : isMatched ? 'green' : 'white',\n                borderWidth: 1,\n                borderColor: 'black',\n                padding: 16,\n                marginBottom: 8,\n                borderRadius: 8\n              },\n              onPress: function onPress() {\n                var _item$answer$selected2, _selectedItems$2;\n                return handleMatch((_item$answer$selected2 = item.answer[(_selectedItems$2 = selectedItems[1]) == null ? void 0 : _selectedItems$2.index]) == null ? void 0 : _item$answer$selected2.option, value.value, index);\n              },\n              children: _jsx(Text, {\n                style: {\n                  textAlign: 'center'\n                },\n                children: value.value\n              })\n            }, item.prompt + \"_\" + value.value);\n          })\n        })]\n      })]\n    });\n  };\n  return _jsxs(View, {\n    style: {\n      padding: 16\n    },\n    children: [_jsx(Text, {\n      style: {\n        fontSize: 24,\n        fontWeight: 'bold',\n        marginBottom: 16\n      },\n      children: triviaName\n    }), _jsx(FlatList, {\n      data: triviaItems,\n      renderItem: renderItem,\n      keyExtractor: function keyExtractor(item) {\n        return item.prompt;\n      }\n    }), _jsx(View, {\n      style: {\n        marginTop: 16\n      },\n      children: _jsx(Button, {\n        title: \"Check Answers\",\n        onPress: handleCheckAnswers\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","Text","Button","View","FlatList","TouchableOpacity","jsx","_jsx","jsxs","_jsxs","Matching","_ref","route","_route$params","params","triviaName","triviaItems","_useState","_useState2","_slicedToArray","matchedItems","setMatchedItems","_useState3","_useState4","selectedOption","setSelectedOption","_useState5","_useState6","selectedValue","setSelectedValue","_useState7","_useState8","selectedItems","setSelectedItems","handleMatch","option","value","index","selectedItem","alreadySelected","find","item","filter","length","concat","_toConsumableArray","handleCheckAnswers","isAllMatched","isAllCorrect","every","t","result","navigation","navigate","alert","renderItem","_ref2","style","marginBottom","children","fontSize","fontWeight","prompt","flexDirection","justifyContent","flex","marginRight","answer","map","isSelected","some","isMatched","backgroundColor","borderWidth","borderColor","padding","borderRadius","onPress","_item$answer$selected","_selectedItems$","textAlign","marginLeft","_item$answer$selected2","_selectedItems$2","data","keyExtractor","marginTop","title"],"sources":["/Users/arianagarciafundora/Desktop/todo-app/src/components/Matching/Matching.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { Text, Button } from '@rneui/themed'\nimport { View, FlatList, TouchableOpacity } from 'react-native'\n\n\nexport default function Matching({ route }) {\n  const { triviaName, triviaItems } = route.params;\n\n  const [matchedItems, setMatchedItems] = useState([]);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [selectedValue, setSelectedValue] = useState(null);\n\n  const [selectedItems, setSelectedItems] = useState([]);\n\n  const handleMatch = (option, value, index) => {\n    const selectedItem = { option, value, index };\n    const alreadySelected = selectedItems.find(item => item.index === index);\n\n    if (alreadySelected) {\n      setSelectedItems(selectedItems.filter(item => item.index !== index));\n    } else if (selectedItems.length < 2) {\n      setSelectedItems([...selectedItems, selectedItem]);\n    }\n  };\n\n  const handleCheckAnswers = () => {\n    const isAllMatched = matchedItems.length === triviaItems.length;\n    if (isAllMatched) {\n      const isAllCorrect = matchedItems.every(\n        (item) =>\n          triviaItems.filter(\n            (t) => t.option === item.option && t.value === item.value\n          ).length > 0\n      );\n      const result = {\n        matchedItems: matchedItems,\n        isAllCorrect: isAllCorrect\n      };\n      navigation.navigate('Summary', { result });\n    } else {\n      alert('Not all items are matched.');\n    }\n  };\n\n  const renderItem = ({ item }) => (\n  <View style={{ marginBottom: 16 }}>\n    <Text style={{ fontSize: 20, fontWeight: 'bold', marginBottom: 8 }}>\n      {item.prompt}\n    </Text>\n    <View style={{ flexDirection: 'row', justifyContent: 'space-between' }}>\n      <View style={{ flex: 1, marginRight: 8 }}>\n        {item.answer.map((option, index) => {\n          const isSelected = selectedItems.some(item => item.option === option.option);\n          const isMatched = matchedItems.some(item => item.option === option.option);\n\n          return (\n            <TouchableOpacity\n              key={`${item.prompt}_${option.option}`}\n              style={{\n                backgroundColor: isSelected ? 'yellow' : isMatched ? 'green' : 'white',\n                borderWidth: 1,\n                borderColor: 'black',\n                padding: 16,\n                marginBottom: 8,\n                borderRadius: 8\n              }}\n              onPress={() => handleMatch(option.option, item.answer[selectedItems[0]?.index]?.value, index)}\n            >\n              <Text style={{ textAlign: 'center' }}>{option.option}</Text>\n            </TouchableOpacity>\n          );\n        })}\n      </View>\n      <View style={{ flex: 1, marginLeft: 8 }}>\n        {item.answer.map((value, index) => {\n          const isSelected = selectedItems.some(item => item.index === index);\n          const isMatched = matchedItems.some(item => item.value === value.value);\n\n          return (\n            <TouchableOpacity\n              key={`${item.prompt}_${value.value}`}\n              style={{\n                backgroundColor: isSelected ? 'yellow' : isMatched ? 'green' : 'white',\n                borderWidth: 1,\n                borderColor: 'black',\n                padding: 16,\n                marginBottom: 8,\n                borderRadius: 8\n              }}\n              onPress={() => handleMatch(item.answer[selectedItems[1]?.index]?.option, value.value, index)}\n            >\n              <Text style={{ textAlign: 'center' }}>{value.value}</Text>\n            </TouchableOpacity>\n          );\n        })}\n      </View>\n    </View>\n  </View>\n);\n\n  return (\n    <View style={{ padding: 16 }}>\n      <Text style={{ fontSize: 24, fontWeight: 'bold', marginBottom: 16 }}>{triviaName}</Text>\n      <FlatList data={triviaItems} renderItem={renderItem} keyExtractor={(item) => item.prompt} />\n      <View style={{ marginTop: 16 }}>\n        <Button title=\"Check Answers\" onPress={handleCheckAnswers} />\n      </View>\n    </View>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}