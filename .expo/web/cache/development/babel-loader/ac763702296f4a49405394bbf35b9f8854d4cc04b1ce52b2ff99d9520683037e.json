{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState } from 'react';\nimport { Text, Button } from '@rneui/themed';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Matching(_ref) {\n  var route = _ref.route;\n  var _route$params = route.params,\n    triviaName = _route$params.triviaName,\n    triviaItems = _route$params.triviaItems;\n  var updatedTriviaItems = triviaItems.map(function (item) {\n    var updatedAnswer = item.answer.map(function (option) {\n      return _objectSpread(_objectSpread({}, option), {}, {\n        isSelected: false\n      });\n    });\n    return _objectSpread(_objectSpread({}, item), {}, {\n      answer: updatedAnswer\n    });\n  });\n  var _useState = useState(updatedTriviaItems),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedOptions = _useState2[0],\n    setSelectedOptions = _useState2[1];\n  var handleOptionPress = function handleOptionPress(item, option) {\n    var updatedSelectedOptions = selectedOptions.map(function (triviaItem) {\n      if (triviaItem.prompt === item.prompt) {\n        var updatedAnswer = triviaItem.answer.map(function (answerOption) {\n          if (answerOption.value === option.value) {\n            return _objectSpread(_objectSpread({}, answerOption), {}, {\n              isSelected: true\n            });\n          } else {\n            return _objectSpread(_objectSpread({}, answerOption), {}, {\n              isSelected: false\n            });\n          }\n        });\n        return _objectSpread(_objectSpread({}, triviaItem), {}, {\n          answer: updatedAnswer\n        });\n      } else {\n        return triviaItem;\n      }\n    });\n    setSelectedOptions(updatedSelectedOptions);\n  };\n  var handleCheckAnswers = function handleCheckAnswers() {\n    var isAllMatched = triviaItems.every(function (item) {\n      return item.answer && item.answer.every(function (option) {\n        return selectedOptions[option.prompt] === option;\n      });\n    });\n    if (isAllMatched) {\n      alert('All items are matched!');\n    } else {\n      alert('Not all items are matched.');\n    }\n  };\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return _jsxs(View, {\n      children: [_jsx(Text, {\n        children: item.prompt\n      }), item.answer.map(function (option, index) {\n        return _jsxs(View, {\n          children: [_jsx(Button, {\n            onPress: function onPress() {\n              return handleOptionPress(item, option);\n            },\n            style: {\n              backgroundColor: option.isSelected ? 'green' : 'white'\n            },\n            children: option.option\n          }), _jsx(Button, {\n            onPress: function onPress() {\n              return handleOptionPress(item, option);\n            },\n            style: {\n              backgroundColor: option.isSelected ? 'green' : 'white'\n            },\n            children: option.value\n          })]\n        }, index);\n      })]\n    });\n  };\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: triviaName\n    }), _jsx(FlatList, {\n      data: selectedOptions,\n      renderItem: renderItem,\n      keyExtractor: function keyExtractor(item) {\n        return item.prompt;\n      }\n    }), _jsx(Button, {\n      onPress: handleCheckAnswers,\n      children: _jsx(Text, {\n        children: \"Check Answers\"\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","Text","Button","View","FlatList","jsx","_jsx","jsxs","_jsxs","Matching","_ref","route","_route$params","params","triviaName","triviaItems","updatedTriviaItems","map","item","updatedAnswer","answer","option","_objectSpread","isSelected","_useState","_useState2","_slicedToArray","selectedOptions","setSelectedOptions","handleOptionPress","updatedSelectedOptions","triviaItem","prompt","answerOption","value","handleCheckAnswers","isAllMatched","every","alert","renderItem","_ref2","children","index","onPress","style","backgroundColor","data","keyExtractor"],"sources":["/Users/arianagarciafundora/Desktop/todo-app/src/components/Matching/Matching.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { Text, Button } from '@rneui/themed'\nimport { View, FlatList } from 'react-native'\n\n\nexport default function Matching ({ route }) {\n  const { triviaName, triviaItems } = route.params;\n  \n\n  const updatedTriviaItems = triviaItems.map(item => {\n    const updatedAnswer = item.answer.map(option => {\n      return { ...option, isSelected: false };\n    });\n    return { ...item, answer: updatedAnswer };\n  });\n\n  const [selectedOptions, setSelectedOptions] = useState(updatedTriviaItems);\n  \n  const handleOptionPress = (item, option) => {\n    const updatedSelectedOptions = selectedOptions.map(triviaItem => {\n      if (triviaItem.prompt === item.prompt) {\n        const updatedAnswer = triviaItem.answer.map(answerOption => {\n          if (answerOption.value === option.value) {\n            return { ...answerOption, isSelected: true };\n          } else {\n            return { ...answerOption, isSelected: false };\n          }\n        });\n        return { ...triviaItem, answer: updatedAnswer };\n      } else {\n        return triviaItem;\n      }\n    });\n    setSelectedOptions(updatedSelectedOptions);\n  };\n\n  const handleCheckAnswers = () => {\n    const isAllMatched = triviaItems.every((item) =>\n      item.answer && item.answer.every((option) => selectedOptions[option.prompt] === option)\n    );\n    if (isAllMatched) {\n      alert('All items are matched!');\n    } else {\n      alert('Not all items are matched.');\n    }\n  };\n\n  const renderItem = ({ item }) => (\n    <View>\n      <Text>{item.prompt}</Text>\n      {item.answer.map((option, index) => (\n        <View key={index}>\n          <Button \n            onPress={() => handleOptionPress(item, option)} \n            style={{ backgroundColor: option.isSelected ? 'green' : 'white' }}\n          >\n            {option.option}\n          </Button>\n          <Button \n            onPress={() => handleOptionPress(item, option)} \n            style={{ backgroundColor: option.isSelected ? 'green' : 'white' }}\n          >\n            {option.value}\n          </Button>\n        </View>\n      ))}\n    </View>\n  )\n\n  return (\n    <View>\n      <Text>{triviaName}</Text>\n      <FlatList\n        data={selectedOptions}\n        renderItem={renderItem}\n        keyExtractor={(item) => item.prompt}\n      />\n      <Button onPress={handleCheckAnswers}>\n        <Text>Check Answers</Text>\n      </Button>\n    </View>\n  );\n}\n\n\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}