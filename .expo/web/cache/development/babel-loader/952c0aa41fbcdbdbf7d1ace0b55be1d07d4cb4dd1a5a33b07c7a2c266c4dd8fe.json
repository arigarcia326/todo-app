{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport { Text, Input, Button } from '@rneui/themed';\nimport View from \"react-native-web/dist/exports/View\";\nimport { triviaData } from \"../../data/data\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function userInput(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var _route$params = route.params,\n    triviaName = _route$params.triviaName,\n    itemIndex = _route$params.itemIndex;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    userAnswer = _useState2[0],\n    setUserAnswer = _useState2[1];\n  var triviaItem = triviaData.find(function (item) {\n    return item.triviaName === triviaName;\n  }).triviaItems[itemIndex];\n  var handleSubmit = function handleSubmit() {\n    if (userAnswer === triviaItem.correctAnswer) {\n      navigation.navigate('Summary', {\n        triviaName: triviaName,\n        itemIndex: itemIndex,\n        isCorrect: true\n      });\n    } else {\n      navigation.navigate('Summary', {\n        triviaName: triviaName,\n        itemIndex: itemIndex,\n        isCorrect: false\n      });\n    }\n  };\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: triviaItem.prompt\n    }), _jsx(Input, {\n      value: userAnswer,\n      onChangeText: setUserAnswer,\n      keyboardType: \"numeric\"\n    }), _jsx(Button, {\n      title: \"Submit\",\n      onPress: handleSubmit\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","Text","Input","Button","View","triviaData","jsx","_jsx","jsxs","_jsxs","userInput","_ref","route","navigation","_route$params","params","triviaName","itemIndex","_useState","_useState2","_slicedToArray","userAnswer","setUserAnswer","triviaItem","find","item","triviaItems","handleSubmit","correctAnswer","navigate","isCorrect","children","prompt","value","onChangeText","keyboardType","title","onPress"],"sources":["/Users/arianagarciafundora/Desktop/todo-app/src/components/userInput/userInput.js"],"sourcesContent":["import React, {useState} from 'react'\nimport { Text, Input, Button } from '@rneui/themed'\nimport { View } from 'react-native';\nimport { triviaData } from '../../data/data';\n\nexport default function userInput ({route, navigation}) {\n  const { triviaName, itemIndex } = route.params;\n  const [userAnswer, setUserAnswer] = useState('');\n\n  const triviaItem = triviaData.find(item => item.triviaName === triviaName).triviaItems[itemIndex];\n\n  const handleSubmit = () => {\n    if (userAnswer === triviaItem.correctAnswer) {\n      navigation.navigate('Summary', { triviaName, itemIndex, isCorrect: true })\n    } else {\n      navigation.navigate('Summary', { triviaName, itemIndex, isCorrect: false })\n    }\n  }\n\n  return (\n    <View>\n      <Text>{triviaItem.prompt}</Text>\n      <Input\n        value={userAnswer}\n        onChangeText={setUserAnswer}\n        keyboardType=\"numeric\"\n      />\n      <Button\n        title=\"Submit\"\n        onPress={handleSubmit}\n      />\n    </View>\n  )\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,SAASC,IAAI,EAAEC,KAAK,EAAEC,MAAM,QAAQ,eAAe;AAAA,OAAAC,IAAA;AAEnD,SAASC,UAAU;AAA0B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE7C,eAAe,SAASC,SAASA,CAAAC,IAAA,EAAuB;EAAA,IAApBC,KAAK,GAAAD,IAAA,CAALC,KAAK;IAAEC,UAAU,GAAAF,IAAA,CAAVE,UAAU;EACnD,IAAAC,aAAA,GAAkCF,KAAK,CAACG,MAAM;IAAtCC,UAAU,GAAAF,aAAA,CAAVE,UAAU;IAAEC,SAAS,GAAAH,aAAA,CAATG,SAAS;EAC7B,IAAAC,SAAA,GAAoClB,QAAQ,CAAC,EAAE,CAAC;IAAAmB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAzCG,UAAU,GAAAF,UAAA;IAAEG,aAAa,GAAAH,UAAA;EAEhC,IAAMI,UAAU,GAAGlB,UAAU,CAACmB,IAAI,CAAC,UAAAC,IAAI;IAAA,OAAIA,IAAI,CAACT,UAAU,KAAKA,UAAU;EAAA,EAAC,CAACU,WAAW,CAACT,SAAS,CAAC;EAEjG,IAAMU,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IACzB,IAAIN,UAAU,KAAKE,UAAU,CAACK,aAAa,EAAE;MAC3Cf,UAAU,CAACgB,QAAQ,CAAC,SAAS,EAAE;QAAEb,UAAU,EAAVA,UAAU;QAAEC,SAAS,EAATA,SAAS;QAAEa,SAAS,EAAE;MAAK,CAAC,CAAC;IAC5E,CAAC,MAAM;MACLjB,UAAU,CAACgB,QAAQ,CAAC,SAAS,EAAE;QAAEb,UAAU,EAAVA,UAAU;QAAEC,SAAS,EAATA,SAAS;QAAEa,SAAS,EAAE;MAAM,CAAC,CAAC;IAC7E;EACF,CAAC;EAED,OACErB,KAAA,CAACL,IAAI;IAAA2B,QAAA,GACHxB,IAAA,CAACN,IAAI;MAAA8B,QAAA,EAAER,UAAU,CAACS;IAAM,EAAQ,EAChCzB,IAAA,CAACL,KAAK;MACJ+B,KAAK,EAAEZ,UAAW;MAClBa,YAAY,EAAEZ,aAAc;MAC5Ba,YAAY,EAAC;IAAS,EACtB,EACF5B,IAAA,CAACJ,MAAM;MACLiC,KAAK,EAAC,QAAQ;MACdC,OAAO,EAAEV;IAAa,EACtB;EAAA,EACG;AAEX"},"metadata":{},"sourceType":"module","externalDependencies":[]}