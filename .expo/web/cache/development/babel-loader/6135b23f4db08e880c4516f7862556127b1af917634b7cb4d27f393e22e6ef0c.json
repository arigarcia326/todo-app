{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport { Text } from '@rneui/themed';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function userInput(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var _route$params = route.params,\n    triviaName = _route$params.triviaName,\n    itemIndex = _route$params.itemIndex;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    userAnswer = _useState2[0],\n    setUserAnswer = _useState2[1];\n  var triviaItem = triviaData.find(function (item) {\n    return item.triviaName === triviaName;\n  }).triviaItems[itemIndex];\n  var handleSubmit = function handleSubmit() {\n    if (userAnswer === triviaItem.correctAnswer) {\n      navigation.navigate('Summary', {\n        triviaName: triviaName,\n        itemIndex: itemIndex,\n        isCorrect: true\n      });\n    } else {\n      navigation.navigate('Summary', {\n        triviaName: triviaName,\n        itemIndex: itemIndex,\n        isCorrect: false\n      });\n    }\n  };\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: triviaItem.prompt\n    }), _jsx(TextInput, {\n      value: userAnswer,\n      onChangeText: setUserAnswer,\n      keyboardType: \"numeric\"\n    }), _jsx(Button, {\n      title: \"Submit\",\n      onPress: handleSubmit\n    })]\n  });\n}","map":{"version":3,"names":["React","Text","jsx","_jsx","jsxs","_jsxs","userInput","_ref","route","navigation","_route$params","params","triviaName","itemIndex","_useState","useState","_useState2","_slicedToArray","userAnswer","setUserAnswer","triviaItem","triviaData","find","item","triviaItems","handleSubmit","correctAnswer","navigate","isCorrect","View","children","prompt","TextInput","value","onChangeText","keyboardType","Button","title","onPress"],"sources":["/Users/arianagarciafundora/Desktop/todo-app/src/components/userInput/userInput.js"],"sourcesContent":["import React from 'react'\nimport { Text } from '@rneui/themed'\n\nexport default function userInput ({route, navigation}) {\n  const { triviaName, itemIndex } = route.params;\n  const [userAnswer, setUserAnswer] = useState('');\n\n  const triviaItem = triviaData.find(item => item.triviaName === triviaName).triviaItems[itemIndex];\n\n  const handleSubmit = () => {\n    if (userAnswer === triviaItem.correctAnswer) {\n      navigation.navigate('Summary', { triviaName, itemIndex, isCorrect: true })\n    } else {\n      navigation.navigate('Summary', { triviaName, itemIndex, isCorrect: false })\n    }\n  }\n\n  return (\n    <View>\n      <Text>{triviaItem.prompt}</Text>\n      <TextInput\n        value={userAnswer}\n        onChangeText={setUserAnswer}\n        keyboardType=\"numeric\"\n      />\n      <Button\n        title=\"Submit\"\n        onPress={handleSubmit}\n      />\n    </View>\n  )\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,eAAe;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEpC,eAAe,SAASC,SAASA,CAAAC,IAAA,EAAuB;EAAA,IAApBC,KAAK,GAAAD,IAAA,CAALC,KAAK;IAAEC,UAAU,GAAAF,IAAA,CAAVE,UAAU;EACnD,IAAAC,aAAA,GAAkCF,KAAK,CAACG,MAAM;IAAtCC,UAAU,GAAAF,aAAA,CAAVE,UAAU;IAAEC,SAAS,GAAAH,aAAA,CAATG,SAAS;EAC7B,IAAAC,SAAA,GAAoCC,QAAQ,CAAC,EAAE,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAAzCI,UAAU,GAAAF,UAAA;IAAEG,aAAa,GAAAH,UAAA;EAEhC,IAAMI,UAAU,GAAGC,UAAU,CAACC,IAAI,CAAC,UAAAC,IAAI;IAAA,OAAIA,IAAI,CAACX,UAAU,KAAKA,UAAU;EAAA,EAAC,CAACY,WAAW,CAACX,SAAS,CAAC;EAEjG,IAAMY,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IACzB,IAAIP,UAAU,KAAKE,UAAU,CAACM,aAAa,EAAE;MAC3CjB,UAAU,CAACkB,QAAQ,CAAC,SAAS,EAAE;QAAEf,UAAU,EAAVA,UAAU;QAAEC,SAAS,EAATA,SAAS;QAAEe,SAAS,EAAE;MAAK,CAAC,CAAC;IAC5E,CAAC,MAAM;MACLnB,UAAU,CAACkB,QAAQ,CAAC,SAAS,EAAE;QAAEf,UAAU,EAAVA,UAAU;QAAEC,SAAS,EAATA,SAAS;QAAEe,SAAS,EAAE;MAAM,CAAC,CAAC;IAC7E;EACF,CAAC;EAED,OACEvB,KAAA,CAACwB,IAAI;IAAAC,QAAA,GACH3B,IAAA,CAACF,IAAI;MAAA6B,QAAA,EAAEV,UAAU,CAACW;IAAM,EAAQ,EAChC5B,IAAA,CAAC6B,SAAS;MACRC,KAAK,EAAEf,UAAW;MAClBgB,YAAY,EAAEf,aAAc;MAC5BgB,YAAY,EAAC;IAAS,EACtB,EACFhC,IAAA,CAACiC,MAAM;MACLC,KAAK,EAAC,QAAQ;MACdC,OAAO,EAAEb;IAAa,EACtB;EAAA,EACG;AAEX"},"metadata":{},"sourceType":"module","externalDependencies":[]}