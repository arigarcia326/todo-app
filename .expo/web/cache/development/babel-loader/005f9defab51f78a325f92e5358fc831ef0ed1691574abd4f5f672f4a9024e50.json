{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport { Text, Button } from '@rneui/themed';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Matching(_ref) {\n  var route = _ref.route;\n  var _route$params = route.params,\n    triviaName = _route$params.triviaName,\n    triviaItems = _route$params.triviaItems;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    matchedItems = _useState2[0],\n    setMatchedItems = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedItems = _useState4[0],\n    setSelectedItems = _useState4[1];\n  var handleMatch = function handleMatch(option, value, index) {\n    var selected = {\n      option: option,\n      value: value,\n      index: index\n    };\n    var newSelectedItems = [].concat(_toConsumableArray(selectedItems), [selected]);\n    setSelectedItems(newSelectedItems);\n    if (newSelectedItems.length === 2) {\n      var matchedItem = {\n        option: newSelectedItems[0].option,\n        value: newSelectedItems[1].value,\n        index: newSelectedItems[0].index\n      };\n      setMatchedItems([].concat(_toConsumableArray(matchedItems), [matchedItem]));\n      setSelectedItems([]);\n    }\n  };\n  var handleCheckAnswers = function handleCheckAnswers() {\n    var isAllMatched = matchedItems.length === triviaItems.length;\n    if (isAllMatched) {\n      var isAllCorrect = matchedItems.every(function (item) {\n        return triviaItems.filter(function (t) {\n          return t.option === item.option && t.value === item.value;\n        }).length > 0;\n      });\n      var result = {\n        matchedItems: matchedItems,\n        isAllCorrect: isAllCorrect\n      };\n      navigation.navigate('Summary', {\n        result: result\n      });\n    } else {\n      alert('Not all items are matched.');\n    }\n  };\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return _jsxs(View, {\n      style: {\n        marginBottom: 16\n      },\n      children: [_jsx(Text, {\n        style: {\n          fontSize: 20,\n          fontWeight: 'bold',\n          marginBottom: 8\n        },\n        children: item.prompt\n      }), _jsxs(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-between'\n        },\n        children: [_jsx(View, {\n          style: {\n            flex: 1,\n            marginRight: 8\n          },\n          children: item.answer.map(function (option, index) {\n            return _jsx(TouchableOpacity, {\n              style: {\n                backgroundColor: selectedItems.some(function (item) {\n                  return item.option === option.option;\n                }) ? 'yellow' : matchedItems.find(function (matchedItem) {\n                  return matchedItem.option === option.option && matchedItem.value === null;\n                }) ? 'orange' : 'white',\n                borderWidth: 1,\n                borderColor: 'black',\n                padding: 16,\n                marginBottom: 8,\n                borderRadius: 8\n              },\n              onPress: function onPress() {\n                var _selectedItems$;\n                return handleMatch(option.option, (_selectedItems$ = selectedItems[0]) == null ? void 0 : _selectedItems$.value, index);\n              },\n              children: _jsx(Text, {\n                style: {\n                  textAlign: 'center'\n                },\n                children: option.option\n              })\n            }, item.prompt + \"_\" + option.option);\n          })\n        }), _jsx(View, {\n          style: {\n            flex: 1,\n            marginLeft: 8\n          },\n          children: item.answer.map(function (value, index) {\n            return _jsx(TouchableOpacity, {\n              style: {\n                backgroundColor: selectedItems.some(function (item) {\n                  return item.value === value.value;\n                }) ? 'yellow' : matchedItems.find(function (matchedItem) {\n                  return matchedItem.option === null && matchedItem.value === value.value;\n                }) ? 'orange' : 'white',\n                borderWidth: 1,\n                borderColor: 'black',\n                padding: 16,\n                marginBottom: 8,\n                borderRadius: 8\n              },\n              onPress: function onPress() {\n                var _selectedItems$2;\n                return handleMatch((_selectedItems$2 = selectedItems[0]) == null ? void 0 : _selectedItems$2.option, value.value, index);\n              },\n              children: _jsx(Text, {\n                style: {\n                  textAlign: 'center'\n                },\n                children: value.value\n              })\n            }, item.prompt + \"_\" + value.value);\n          })\n        })]\n      })]\n    });\n  };\n  return _jsxs(View, {\n    style: {\n      padding: 16\n    },\n    children: [_jsx(Text, {\n      style: {\n        fontSize: 24,\n        fontWeight: 'bold',\n        marginBottom: 16\n      },\n      children: triviaName\n    }), _jsx(FlatList, {\n      data: triviaItems,\n      renderItem: renderItem,\n      keyExtractor: function keyExtractor(item) {\n        return item.prompt;\n      }\n    }), _jsx(View, {\n      style: {\n        marginTop: 16\n      },\n      children: _jsx(Button, {\n        title: \"Check Answers\",\n        onPress: handleCheckAnswers\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","Text","Button","View","FlatList","TouchableOpacity","jsx","_jsx","jsxs","_jsxs","Matching","_ref","route","_route$params","params","triviaName","triviaItems","_useState","_useState2","_slicedToArray","matchedItems","setMatchedItems","_useState3","_useState4","selectedItems","setSelectedItems","handleMatch","option","value","index","selected","newSelectedItems","concat","_toConsumableArray","length","matchedItem","handleCheckAnswers","isAllMatched","isAllCorrect","every","item","filter","t","result","navigation","navigate","alert","renderItem","_ref2","style","marginBottom","children","fontSize","fontWeight","prompt","flexDirection","justifyContent","flex","marginRight","answer","map","backgroundColor","some","find","borderWidth","borderColor","padding","borderRadius","onPress","_selectedItems$","textAlign","marginLeft","_selectedItems$2","data","keyExtractor","marginTop","title"],"sources":["/Users/arianagarciafundora/Desktop/todo-app/src/components/Matching/Matching.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { Text, Button } from '@rneui/themed'\nimport { View, FlatList, TouchableOpacity } from 'react-native'\n\n\nexport default function Matching({ route }) {\n  const { triviaName, triviaItems } = route.params;\n\n  const [matchedItems, setMatchedItems] = useState([]);\n  const [selectedItems, setSelectedItems] = useState([]);\n\n  const handleMatch = (option, value, index) => {\n    const selected = { option, value, index };\n    const newSelectedItems = [...selectedItems, selected];\n    setSelectedItems(newSelectedItems);\n\n    if (newSelectedItems.length === 2) {\n      const matchedItem = { option: newSelectedItems[0].option, value: newSelectedItems[1].value, index: newSelectedItems[0].index };\n      setMatchedItems([...matchedItems, matchedItem]);\n      setSelectedItems([]);\n    }\n  };\n\n  const handleCheckAnswers = () => {\n    const isAllMatched = matchedItems.length === triviaItems.length;\n    if (isAllMatched) {\n      const isAllCorrect = matchedItems.every(\n        (item) =>\n          triviaItems.filter(\n            (t) => t.option === item.option && t.value === item.value\n          ).length > 0\n      );\n      const result = {\n        matchedItems: matchedItems,\n        isAllCorrect: isAllCorrect\n      };\n      navigation.navigate('Summary', { result });\n    } else {\n      alert('Not all items are matched.');\n    }\n  };\n\n  const renderItem = ({ item }) => (\n    <View style={{ marginBottom: 16 }}>\n      <Text style={{ fontSize: 20, fontWeight: 'bold', marginBottom: 8 }}>\n        {item.prompt}\n      </Text>\n      <View style={{ flexDirection: 'row', justifyContent: 'space-between' }}>\n        <View style={{ flex: 1, marginRight: 8 }}>\n          {item.answer.map((option, index) => (\n            <TouchableOpacity\n              key={`${item.prompt}_${option.option}`}\n              style={{\n                backgroundColor:\n                  selectedItems.some((item) => item.option === option.option)\n                    ? 'yellow'\n                    : matchedItems.find(\n                        (matchedItem) =>\n                          matchedItem.option === option.option &&\n                          matchedItem.value === null\n                      )\n                    ? 'orange'\n                    : 'white',\n                borderWidth: 1,\n                borderColor: 'black',\n                padding: 16,\n                marginBottom: 8,\n                borderRadius: 8\n              }}\n              onPress={() =>\n                handleMatch(option.option, selectedItems[0]?.value, index)\n              }\n            >\n              <Text style={{ textAlign: 'center' }}>{option.option}</Text>\n            </TouchableOpacity>\n          ))}\n        </View>\n        <View style={{ flex: 1, marginLeft: 8 }}>\n          {item.answer.map((value, index) => (\n            <TouchableOpacity\n              key={`${item.prompt}_${value.value}`}\n              style={{\n                backgroundColor:\n                  selectedItems.some((item) => item.value === value.value)\n                    ? 'yellow'\n                    : matchedItems.find(\n                        (matchedItem) =>\n                          matchedItem.option === null &&\n                          matchedItem.value === value.value\n                      )\n                    ? 'orange'\n                    : 'white',\n                borderWidth: 1,\n                borderColor: 'black',\n                padding: 16,\n                marginBottom: 8,\n                borderRadius: 8\n              }}\n              onPress={() =>\n                handleMatch(selectedItems[0]?.option, value.value, index)\n              }\n            >\n              <Text style={{ textAlign: 'center' }}>{value.value}</Text>\n            </TouchableOpacity>\n          ))}\n        </View>\n      </View>\n    </View>\n  );\n\n  return (\n    <View style={{ padding: 16 }}>\n      <Text style={{ fontSize: 24, fontWeight: 'bold', marginBottom: 16 }}>{triviaName}</Text>\n      <FlatList data={triviaItems} renderItem={renderItem} keyExtractor={(item) => item.prompt} />\n      <View style={{ marginTop: 16 }}>\n        <Button title=\"Check Answers\" onPress={handleCheckAnswers} />\n      </View>\n    </View>\n  );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,EAAEC,MAAM,QAAQ,eAAe;AAAA,OAAAC,IAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,gBAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAI5C,eAAe,SAASC,QAAQA,CAAAC,IAAA,EAAY;EAAA,IAATC,KAAK,GAAAD,IAAA,CAALC,KAAK;EACtC,IAAAC,aAAA,GAAoCD,KAAK,CAACE,MAAM;IAAxCC,UAAU,GAAAF,aAAA,CAAVE,UAAU;IAAEC,WAAW,GAAAH,aAAA,CAAXG,WAAW;EAE/B,IAAAC,SAAA,GAAwCjB,QAAQ,CAAC,EAAE,CAAC;IAAAkB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA7CG,YAAY,GAAAF,UAAA;IAAEG,eAAe,GAAAH,UAAA;EACpC,IAAAI,UAAA,GAA0CtB,QAAQ,CAAC,EAAE,CAAC;IAAAuB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA/CE,aAAa,GAAAD,UAAA;IAAEE,gBAAgB,GAAAF,UAAA;EAEtC,IAAMG,WAAW,GAAG,SAAdA,WAAWA,CAAIC,MAAM,EAAEC,KAAK,EAAEC,KAAK,EAAK;IAC5C,IAAMC,QAAQ,GAAG;MAAEH,MAAM,EAANA,MAAM;MAAEC,KAAK,EAALA,KAAK;MAAEC,KAAK,EAALA;IAAM,CAAC;IACzC,IAAME,gBAAgB,MAAAC,MAAA,CAAAC,kBAAA,CAAOT,aAAa,IAAEM,QAAQ,EAAC;IACrDL,gBAAgB,CAACM,gBAAgB,CAAC;IAElC,IAAIA,gBAAgB,CAACG,MAAM,KAAK,CAAC,EAAE;MACjC,IAAMC,WAAW,GAAG;QAAER,MAAM,EAAEI,gBAAgB,CAAC,CAAC,CAAC,CAACJ,MAAM;QAAEC,KAAK,EAAEG,gBAAgB,CAAC,CAAC,CAAC,CAACH,KAAK;QAAEC,KAAK,EAAEE,gBAAgB,CAAC,CAAC,CAAC,CAACF;MAAM,CAAC;MAC9HR,eAAe,IAAAW,MAAA,CAAAC,kBAAA,CAAKb,YAAY,IAAEe,WAAW,GAAE;MAC/CV,gBAAgB,CAAC,EAAE,CAAC;IACtB;EACF,CAAC;EAED,IAAMW,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAA,EAAS;IAC/B,IAAMC,YAAY,GAAGjB,YAAY,CAACc,MAAM,KAAKlB,WAAW,CAACkB,MAAM;IAC/D,IAAIG,YAAY,EAAE;MAChB,IAAMC,YAAY,GAAGlB,YAAY,CAACmB,KAAK,CACrC,UAACC,IAAI;QAAA,OACHxB,WAAW,CAACyB,MAAM,CAChB,UAACC,CAAC;UAAA,OAAKA,CAAC,CAACf,MAAM,KAAKa,IAAI,CAACb,MAAM,IAAIe,CAAC,CAACd,KAAK,KAAKY,IAAI,CAACZ,KAAK;QAAA,EAC1D,CAACM,MAAM,GAAG,CAAC;MAAA,EACf;MACD,IAAMS,MAAM,GAAG;QACbvB,YAAY,EAAEA,YAAY;QAC1BkB,YAAY,EAAEA;MAChB,CAAC;MACDM,UAAU,CAACC,QAAQ,CAAC,SAAS,EAAE;QAAEF,MAAM,EAANA;MAAO,CAAC,CAAC;IAC5C,CAAC,MAAM;MACLG,KAAK,CAAC,4BAA4B,CAAC;IACrC;EACF,CAAC;EAED,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAAC,KAAA;IAAA,IAAMR,IAAI,GAAAQ,KAAA,CAAJR,IAAI;IAAA,OACxB/B,KAAA,CAACN,IAAI;MAAC8C,KAAK,EAAE;QAAEC,YAAY,EAAE;MAAG,CAAE;MAAAC,QAAA,GAChC5C,IAAA,CAACN,IAAI;QAACgD,KAAK,EAAE;UAAEG,QAAQ,EAAE,EAAE;UAAEC,UAAU,EAAE,MAAM;UAAEH,YAAY,EAAE;QAAE,CAAE;QAAAC,QAAA,EAChEX,IAAI,CAACc;MAAM,EACP,EACP7C,KAAA,CAACN,IAAI;QAAC8C,KAAK,EAAE;UAAEM,aAAa,EAAE,KAAK;UAAEC,cAAc,EAAE;QAAgB,CAAE;QAAAL,QAAA,GACrE5C,IAAA,CAACJ,IAAI;UAAC8C,KAAK,EAAE;YAAEQ,IAAI,EAAE,CAAC;YAAEC,WAAW,EAAE;UAAE,CAAE;UAAAP,QAAA,EACtCX,IAAI,CAACmB,MAAM,CAACC,GAAG,CAAC,UAACjC,MAAM,EAAEE,KAAK;YAAA,OAC7BtB,IAAA,CAACF,gBAAgB;cAEf4C,KAAK,EAAE;gBACLY,eAAe,EACbrC,aAAa,CAACsC,IAAI,CAAC,UAACtB,IAAI;kBAAA,OAAKA,IAAI,CAACb,MAAM,KAAKA,MAAM,CAACA,MAAM;gBAAA,EAAC,GACvD,QAAQ,GACRP,YAAY,CAAC2C,IAAI,CACf,UAAC5B,WAAW;kBAAA,OACVA,WAAW,CAACR,MAAM,KAAKA,MAAM,CAACA,MAAM,IACpCQ,WAAW,CAACP,KAAK,KAAK,IAAI;gBAAA,EAC7B,GACD,QAAQ,GACR,OAAO;gBACboC,WAAW,EAAE,CAAC;gBACdC,WAAW,EAAE,OAAO;gBACpBC,OAAO,EAAE,EAAE;gBACXhB,YAAY,EAAE,CAAC;gBACfiB,YAAY,EAAE;cAChB,CAAE;cACFC,OAAO,EAAE,SAAAA,QAAA;gBAAA,IAAAC,eAAA;gBAAA,OACP3C,WAAW,CAACC,MAAM,CAACA,MAAM,GAAA0C,eAAA,GAAE7C,aAAa,CAAC,CAAC,CAAC,qBAAhB6C,eAAA,CAAkBzC,KAAK,EAAEC,KAAK,CAAC;cAAA,CAC3D;cAAAsB,QAAA,EAED5C,IAAA,CAACN,IAAI;gBAACgD,KAAK,EAAE;kBAAEqB,SAAS,EAAE;gBAAS,CAAE;gBAAAnB,QAAA,EAAExB,MAAM,CAACA;cAAM;YAAQ,GAtBpDa,IAAI,CAACc,MAAM,SAAI3B,MAAM,CAACA,MAAM,CAuBnB;UAAA,CACpB;QAAC,EACG,EACPpB,IAAA,CAACJ,IAAI;UAAC8C,KAAK,EAAE;YAAEQ,IAAI,EAAE,CAAC;YAAEc,UAAU,EAAE;UAAE,CAAE;UAAApB,QAAA,EACrCX,IAAI,CAACmB,MAAM,CAACC,GAAG,CAAC,UAAChC,KAAK,EAAEC,KAAK;YAAA,OAC5BtB,IAAA,CAACF,gBAAgB;cAEf4C,KAAK,EAAE;gBACLY,eAAe,EACbrC,aAAa,CAACsC,IAAI,CAAC,UAACtB,IAAI;kBAAA,OAAKA,IAAI,CAACZ,KAAK,KAAKA,KAAK,CAACA,KAAK;gBAAA,EAAC,GACpD,QAAQ,GACRR,YAAY,CAAC2C,IAAI,CACf,UAAC5B,WAAW;kBAAA,OACVA,WAAW,CAACR,MAAM,KAAK,IAAI,IAC3BQ,WAAW,CAACP,KAAK,KAAKA,KAAK,CAACA,KAAK;gBAAA,EACpC,GACD,QAAQ,GACR,OAAO;gBACboC,WAAW,EAAE,CAAC;gBACdC,WAAW,EAAE,OAAO;gBACpBC,OAAO,EAAE,EAAE;gBACXhB,YAAY,EAAE,CAAC;gBACfiB,YAAY,EAAE;cAChB,CAAE;cACFC,OAAO,EAAE,SAAAA,QAAA;gBAAA,IAAAI,gBAAA;gBAAA,OACP9C,WAAW,EAAA8C,gBAAA,GAAChD,aAAa,CAAC,CAAC,CAAC,qBAAhBgD,gBAAA,CAAkB7C,MAAM,EAAEC,KAAK,CAACA,KAAK,EAAEC,KAAK,CAAC;cAAA,CAC1D;cAAAsB,QAAA,EAED5C,IAAA,CAACN,IAAI;gBAACgD,KAAK,EAAE;kBAAEqB,SAAS,EAAE;gBAAS,CAAE;gBAAAnB,QAAA,EAAEvB,KAAK,CAACA;cAAK;YAAQ,GAtBlDY,IAAI,CAACc,MAAM,SAAI1B,KAAK,CAACA,KAAK,CAuBjB;UAAA,CACpB;QAAC,EACG;MAAA,EACF;IAAA,EACF;EAAA,CACR;EAED,OACEnB,KAAA,CAACN,IAAI;IAAC8C,KAAK,EAAE;MAAEiB,OAAO,EAAE;IAAG,CAAE;IAAAf,QAAA,GAC3B5C,IAAA,CAACN,IAAI;MAACgD,KAAK,EAAE;QAAEG,QAAQ,EAAE,EAAE;QAAEC,UAAU,EAAE,MAAM;QAAEH,YAAY,EAAE;MAAG,CAAE;MAAAC,QAAA,EAAEpC;IAAU,EAAQ,EACxFR,IAAA,CAACH,QAAQ;MAACqE,IAAI,EAAEzD,WAAY;MAAC+B,UAAU,EAAEA,UAAW;MAAC2B,YAAY,EAAE,SAAAA,aAAClC,IAAI;QAAA,OAAKA,IAAI,CAACc,MAAM;MAAA;IAAC,EAAG,EAC5F/C,IAAA,CAACJ,IAAI;MAAC8C,KAAK,EAAE;QAAE0B,SAAS,EAAE;MAAG,CAAE;MAAAxB,QAAA,EAC7B5C,IAAA,CAACL,MAAM;QAAC0E,KAAK,EAAC,eAAe;QAACR,OAAO,EAAEhC;MAAmB;IAAG,EACxD;EAAA,EACF;AAEX"},"metadata":{},"sourceType":"module","externalDependencies":[]}