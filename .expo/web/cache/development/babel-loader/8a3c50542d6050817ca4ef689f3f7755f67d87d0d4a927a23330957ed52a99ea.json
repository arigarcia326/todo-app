{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport { Text, Button } from '@rneui/themed';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Matching(_ref) {\n  var route = _ref.route;\n  var _route$params = route.params,\n    triviaName = _route$params.triviaName,\n    triviaItems = _route$params.triviaItems;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    matchedItems = _useState2[0],\n    setMatchedItems = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedOption = _useState4[0],\n    setSelectedOption = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    selectedValue = _useState6[0],\n    setSelectedValue = _useState6[1];\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    selectedOptions = _useState8[0],\n    setSelectedOptions = _useState8[1];\n  var _useState9 = useState([]),\n    _useState10 = _slicedToArray(_useState9, 2),\n    selectedValues = _useState10[0],\n    setSelectedValues = _useState10[1];\n  var handleMatch = function handleMatch(option, value, index) {\n    var isOptionSelected = selectedOptions.includes(option);\n    var isValueSelected = selectedValues.includes(value);\n    if (isOptionSelected && isValueSelected) {\n      var matchedIndex = matchedItems.findIndex(function (item) {\n        return item.option === option && item.value === value;\n      });\n      if (matchedIndex >= 0) {\n        var newMatchedItems = _toConsumableArray(matchedItems);\n        newMatchedItems.splice(matchedIndex, 1);\n        setMatchedItems(newMatchedItems);\n      }\n      setSelectedOptions(selectedOptions.filter(function (o) {\n        return o !== option;\n      }));\n      setSelectedValues(selectedValues.filter(function (v) {\n        return v !== value;\n      }));\n    } else if (isOptionSelected) {\n      setSelectedValues([].concat(_toConsumableArray(selectedValues), [value]));\n    } else if (isValueSelected) {\n      setSelectedOptions([].concat(_toConsumableArray(selectedOptions), [option]));\n    } else {\n      setSelectedOptions([option]);\n      setSelectedValues([value]);\n    }\n  };\n  var handleCheckAnswers = function handleCheckAnswers() {\n    var isAllMatched = matchedItems.length === triviaItems.length;\n    if (isAllMatched) {\n      var isAllCorrect = matchedItems.every(function (item) {\n        return triviaItems.filter(function (t) {\n          return t.option === item.option && t.value === item.value;\n        }).length > 0;\n      });\n      var result = {\n        matchedItems: matchedItems,\n        isAllCorrect: isAllCorrect\n      };\n      navigation.navigate('Summary', {\n        result: result\n      });\n    } else {\n      alert('Not all items are matched.');\n    }\n  };\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return _jsxs(View, {\n      style: {\n        marginBottom: 16\n      },\n      children: [_jsx(Text, {\n        style: {\n          fontSize: 20,\n          fontWeight: 'bold',\n          marginBottom: 8\n        },\n        children: item.prompt\n      }), _jsxs(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-between'\n        },\n        children: [_jsx(View, {\n          style: {\n            flex: 1,\n            marginRight: 8\n          },\n          children: item.answer.map(function (option, index) {\n            return _jsx(TouchableOpacity, {\n              style: {\n                backgroundColor: selectedOptions.includes(option.option) ? 'yellow' : matchedItems.find(function (matchedItem) {\n                  return matchedItem.option === option.option && matchedItem.value === null;\n                }) ? 'orange' : 'white',\n                borderWidth: 1,\n                borderColor: 'black',\n                padding: 16,\n                marginBottom: 8,\n                borderRadius: 8\n              },\n              onPress: function onPress() {\n                return handleMatch(option.option, selectedValues[index], index);\n              },\n              children: _jsx(Text, {\n                style: {\n                  textAlign: 'center'\n                },\n                children: option.option\n              })\n            }, item.prompt + \"_\" + option.option);\n          })\n        }), _jsx(View, {\n          style: {\n            flex: 1,\n            marginLeft: 8\n          },\n          children: item.answer.map(function (value, index) {\n            return _jsx(TouchableOpacity, {\n              style: {\n                backgroundColor: selectedValue === value.value ? 'yellow' : matchedItems.find(function (matchedItem) {\n                  return matchedItem.option === null && matchedItem.value === value.value;\n                }) ? 'orange' : 'white',\n                borderWidth: 1,\n                borderColor: 'black',\n                padding: 16,\n                marginBottom: 8,\n                borderRadius: 8\n              },\n              onPress: function onPress() {\n                return handleMatch(selectedOption, value.value);\n              },\n              children: _jsx(Text, {\n                style: {\n                  textAlign: 'center'\n                },\n                children: value.value\n              })\n            }, item.prompt + \"_\" + value.value);\n          })\n        })]\n      })]\n    });\n  };\n  return _jsxs(View, {\n    style: {\n      padding: 16\n    },\n    children: [_jsx(Text, {\n      style: {\n        fontSize: 24,\n        fontWeight: 'bold',\n        marginBottom: 16\n      },\n      children: triviaName\n    }), _jsx(FlatList, {\n      data: triviaItems,\n      renderItem: renderItem,\n      keyExtractor: function keyExtractor(item) {\n        return item.prompt;\n      }\n    }), _jsx(View, {\n      style: {\n        marginTop: 16\n      },\n      children: _jsx(Button, {\n        title: \"Check Answers\",\n        onPress: handleCheckAnswers\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","Text","Button","View","FlatList","TouchableOpacity","jsx","_jsx","jsxs","_jsxs","Matching","_ref","route","_route$params","params","triviaName","triviaItems","_useState","_useState2","_slicedToArray","matchedItems","setMatchedItems","_useState3","_useState4","selectedOption","setSelectedOption","_useState5","_useState6","selectedValue","setSelectedValue","_useState7","_useState8","selectedOptions","setSelectedOptions","_useState9","_useState10","selectedValues","setSelectedValues","handleMatch","option","value","index","isOptionSelected","includes","isValueSelected","matchedIndex","findIndex","item","newMatchedItems","_toConsumableArray","splice","filter","o","v","concat","handleCheckAnswers","isAllMatched","length","isAllCorrect","every","t","result","navigation","navigate","alert","renderItem","_ref2","style","marginBottom","children","fontSize","fontWeight","prompt","flexDirection","justifyContent","flex","marginRight","answer","map","backgroundColor","find","matchedItem","borderWidth","borderColor","padding","borderRadius","onPress","textAlign","marginLeft","data","keyExtractor","marginTop","title"],"sources":["/Users/arianagarciafundora/Desktop/todo-app/src/components/Matching/Matching.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { Text, Button } from '@rneui/themed'\nimport { View, FlatList, TouchableOpacity } from 'react-native'\n\n\nexport default function Matching({ route }) {\n  const { triviaName, triviaItems } = route.params;\n\n  const [matchedItems, setMatchedItems] = useState([]);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [selectedValue, setSelectedValue] = useState(null);\n\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const [selectedValues, setSelectedValues] = useState([]);\n  \n  const handleMatch = (option, value, index) => {\n    const isOptionSelected = selectedOptions.includes(option);\n    const isValueSelected = selectedValues.includes(value);\n    \n    if (isOptionSelected && isValueSelected) {\n      // Unmatch the option and value if they're already matched\n      const matchedIndex = matchedItems.findIndex(\n        (item) => item.option === option && item.value === value\n      );\n      if (matchedIndex >= 0) {\n        const newMatchedItems = [...matchedItems];\n        newMatchedItems.splice(matchedIndex, 1);\n        setMatchedItems(newMatchedItems);\n      }\n      \n      // Unselect the option and value\n      setSelectedOptions(selectedOptions.filter((o) => o !== option));\n      setSelectedValues(selectedValues.filter((v) => v !== value));\n    } else if (isOptionSelected) {\n      // Select the value\n      setSelectedValues([...selectedValues, value]);\n    } else if (isValueSelected) {\n      // Select the option\n      setSelectedOptions([...selectedOptions, option]);\n    } else {\n      // Select the option and value\n      setSelectedOptions([option]);\n      setSelectedValues([value]);\n    }\n  };\n\n  const handleCheckAnswers = () => {\n    const isAllMatched = matchedItems.length === triviaItems.length;\n    if (isAllMatched) {\n      const isAllCorrect = matchedItems.every(\n        (item) =>\n          triviaItems.filter(\n            (t) => t.option === item.option && t.value === item.value\n          ).length > 0\n      );\n      const result = {\n        matchedItems: matchedItems,\n        isAllCorrect: isAllCorrect\n      };\n      navigation.navigate('Summary', { result });\n    } else {\n      alert('Not all items are matched.');\n    }\n  };\n\n  const renderItem = ({ item }) => (\n    <View style={{ marginBottom: 16 }}>\n      <Text style={{ fontSize: 20, fontWeight: 'bold', marginBottom: 8 }}>\n        {item.prompt}\n      </Text>\n      <View style={{ flexDirection: 'row', justifyContent: 'space-between' }}>\n        <View style={{ flex: 1, marginRight: 8 }}>\n          {item.answer.map((option, index) => (\n            <TouchableOpacity\n              key={`${item.prompt}_${option.option}`}\n              style={{\n                backgroundColor:\n                  selectedOptions.includes(option.option)\n                    ? 'yellow'\n                    : matchedItems.find(\n                        (matchedItem) =>\n                          matchedItem.option === option.option &&\n                          matchedItem.value === null\n                      )\n                    ? 'orange'\n                    : 'white',\n                borderWidth: 1,\n                borderColor: 'black',\n                padding: 16,\n                marginBottom: 8,\n                borderRadius: 8\n              }}\n              onPress={() => handleMatch(option.option, selectedValues[index], index)}\n            >\n              <Text style={{ textAlign: 'center' }}>{option.option}</Text>\n            </TouchableOpacity>\n          ))}\n        </View>\n        <View style={{ flex: 1, marginLeft: 8 }}>\n          {item.answer.map((value, index) => (\n            <TouchableOpacity\n              key={`${item.prompt}_${value.value}`}\n              style={{\n                backgroundColor:\n                  selectedValue === value.value ? 'yellow' : matchedItems.find(\n                      (matchedItem) =>\n                        matchedItem.option === null &&\n                        matchedItem.value === value.value\n                    )\n                  ? 'orange'\n                  : 'white',\n                borderWidth: 1,\n                borderColor: 'black',\n                padding: 16,\n                marginBottom: 8,\n                borderRadius: 8\n              }}\n              onPress={() => handleMatch(selectedOption, value.value)}>\n              <Text style={{ textAlign: 'center' }}>{value.value}</Text>\n            </TouchableOpacity>\n          ))}\n        </View>\n      </View>\n    </View>\n  );\n\n  return (\n    <View style={{ padding: 16 }}>\n      <Text style={{ fontSize: 24, fontWeight: 'bold', marginBottom: 16 }}>{triviaName}</Text>\n      <FlatList data={triviaItems} renderItem={renderItem} keyExtractor={(item) => item.prompt} />\n      <View style={{ marginTop: 16 }}>\n        <Button title=\"Check Answers\" onPress={handleCheckAnswers} />\n      </View>\n    </View>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}