{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { CheckBox, Input, Text } from '@rneui/themed';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as Font from 'expo-font';\nimport FontAwesome from '@expo/vector-icons/FontAwesome';\nimport Completed from \"./src/components/Matching/Matching\";\nimport { triviaData } from \"./src/data/data\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction cacheFonts(_x) {\n  return _cacheFonts.apply(this, arguments);\n}\nfunction _cacheFonts() {\n  _cacheFonts = _asyncToGenerator(function* (fonts) {\n    return fonts.map(function () {\n      var _ref2 = _asyncToGenerator(function* (font) {\n        return yield Font.loadAsync(font);\n      });\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n  });\n  return _cacheFonts.apply(this, arguments);\n}\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"Home\",\n      children: [_jsx(Stack.Screen, {\n        name: \"Matching\",\n        component: Matching\n      }), _jsx(Stack.Screen, {\n        name: \"Home\",\n        component: HomeScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Summary\",\n        component: Summary\n      }), _jsx(Stack.Screen, {\n        name: \"DropDown\",\n        component: DropDown\n      }), _jsx(Stack.Screen, {\n        name: \"TextInput\",\n        component: TextInput\n      })]\n    })\n  });\n  function HomeScreen() {\n    cacheFonts([FontAwesome.font]);\n    return _jsxs(View, {\n      children: [_jsx(Text, {\n        children: \"Trivia\"\n      }), _jsx(FlatList, {\n        data: triviaData,\n        keyExtractor: function keyExtractor(item) {\n          return item.triviaName;\n        },\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return _jsx(Button, {\n            children: item.triviaName\n          });\n        }\n      })]\n    });\n  }\n}","map":{"version":3,"names":["StatusBar","React","useState","StyleSheet","View","FlatList","KeyboardAvoidingView","TouchableOpacity","SafeAreaView","Platform","Button","CheckBox","Input","Text","NavigationContainer","createNativeStackNavigator","AsyncStorage","Font","FontAwesome","Completed","triviaData","jsx","_jsx","jsxs","_jsxs","cacheFonts","_x","_cacheFonts","apply","arguments","_asyncToGenerator","fonts","map","_ref2","font","loadAsync","_x2","Stack","App","children","Navigator","initialRouteName","Screen","name","component","Matching","HomeScreen","Summary","DropDown","TextInput","data","keyExtractor","item","triviaName","renderItem","_ref"],"sources":["/Users/arianagarciafundora/Desktop/todo-app/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react'\nimport { StyleSheet, View, FlatList, KeyboardAvoidingView, TouchableOpacity, SafeAreaView, Platform, Button } from 'react-native';\nimport { CheckBox, Input, Text } from '@rneui/themed';\nimport { NavigationContainer } from '@react-navigation/native'\nimport { createNativeStackNavigator } from '@react-navigation/native-stack'\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as Font from 'expo-font'\nimport FontAwesome from '@expo/vector-icons/FontAwesome'\nimport Completed from './src/components/Matching/Matching';\nimport { triviaData } from './src/data/data';\n\n\nasync function cacheFonts(fonts) {\n  return fonts.map(async (font) => await Font.loadAsync(font))\n}\n\nconst Stack = createNativeStackNavigator ()\n\n\nexport default function App() {\n  //navigation\n   return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName=\"Home\">\n        <Stack.Screen name=\"Matching\" component={Matching} />\n        <Stack.Screen name=\"Home\" component={HomeScreen} />\n        <Stack.Screen name=\"Summary\" component={Summary} />\n        <Stack.Screen name=\"DropDown\" component={DropDown} />\n        <Stack.Screen name=\"TextInput\" component={TextInput} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  )\n\n  function HomeScreen () {\n    cacheFonts([FontAwesome.font])\n    \n    return (\n      <View>\n        <Text>Trivia</Text>\n       <FlatList\n        data={triviaData}\n        keyExtractor={(item) => item.triviaName}\n        renderItem={({ item }) => <Button>{item.triviaName}</Button>}\n       />\n      </View>\n    )\n\n  }\n\n\n}\n\n//const styles = StyleSheet.create({\n  \n//})\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAC3C,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,oBAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,YAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,MAAA;AAEvC,SAASC,QAAQ,EAAEC,KAAK,EAAEC,IAAI,QAAQ,eAAe;AACrD,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,OAAOC,YAAY,MAAM,2CAA2C;AACpE,OAAO,KAAKC,IAAI,MAAM,WAAW;AACjC,OAAOC,WAAW,MAAM,gCAAgC;AACxD,OAAOC,SAAS;AAChB,SAASC,UAAU;AAA0B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAG9BC,UAAUA,CAAAC,EAAA;EAAA,OAAAC,WAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,YAAA;EAAAA,WAAA,GAAAG,iBAAA,CAAzB,WAA0BC,KAAK,EAAE;IAC/B,OAAOA,KAAK,CAACC,GAAG;MAAA,IAAAC,KAAA,GAAAH,iBAAA,CAAC,WAAOI,IAAI;QAAA,aAAWjB,IAAI,CAACkB,SAAS,CAACD,IAAI,CAAC;MAAA;MAAA,iBAAAE,GAAA;QAAA,OAAAH,KAAA,CAAAL,KAAA,OAAAC,SAAA;MAAA;IAAA,IAAC;EAC9D,CAAC;EAAA,OAAAF,WAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAED,IAAMQ,KAAK,GAAGtB,0BAA0B,EAAG;AAG3C,eAAe,SAASuB,GAAGA,CAAA,EAAG;EAE3B,OACChB,IAAA,CAACR,mBAAmB;IAAAyB,QAAA,EAClBf,KAAA,CAACa,KAAK,CAACG,SAAS;MAACC,gBAAgB,EAAC,MAAM;MAAAF,QAAA,GACtCjB,IAAA,CAACe,KAAK,CAACK,MAAM;QAACC,IAAI,EAAC,UAAU;QAACC,SAAS,EAAEC;MAAS,EAAG,EACrDvB,IAAA,CAACe,KAAK,CAACK,MAAM;QAACC,IAAI,EAAC,MAAM;QAACC,SAAS,EAAEE;MAAW,EAAG,EACnDxB,IAAA,CAACe,KAAK,CAACK,MAAM;QAACC,IAAI,EAAC,SAAS;QAACC,SAAS,EAAEG;MAAQ,EAAG,EACnDzB,IAAA,CAACe,KAAK,CAACK,MAAM;QAACC,IAAI,EAAC,UAAU;QAACC,SAAS,EAAEI;MAAS,EAAG,EACrD1B,IAAA,CAACe,KAAK,CAACK,MAAM;QAACC,IAAI,EAAC,WAAW;QAACC,SAAS,EAAEK;MAAU,EAAG;IAAA;EACvC,EACE;EAGxB,SAASH,UAAUA,CAAA,EAAI;IACrBrB,UAAU,CAAC,CAACP,WAAW,CAACgB,IAAI,CAAC,CAAC;IAE9B,OACEV,KAAA,CAACpB,IAAI;MAAAmC,QAAA,GACHjB,IAAA,CAACT,IAAI;QAAA0B,QAAA,EAAC;MAAM,EAAO,EACpBjB,IAAA,CAACjB,QAAQ;QACR6C,IAAI,EAAE9B,UAAW;QACjB+B,YAAY,EAAE,SAAAA,aAACC,IAAI;UAAA,OAAKA,IAAI,CAACC,UAAU;QAAA,CAAC;QACxCC,UAAU,EAAE,SAAAA,WAAAC,IAAA;UAAA,IAAGH,IAAI,GAAAG,IAAA,CAAJH,IAAI;UAAA,OAAO9B,IAAA,CAACZ,MAAM;YAAA6B,QAAA,EAAEa,IAAI,CAACC;UAAU,EAAU;QAAA;MAAC,EAC5D;IAAA,EACI;EAGX;AAGF"},"metadata":{},"sourceType":"module","externalDependencies":[]}