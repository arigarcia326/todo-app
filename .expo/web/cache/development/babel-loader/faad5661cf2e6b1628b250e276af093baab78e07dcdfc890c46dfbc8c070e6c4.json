{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { CheckBox, Input, Text } from '@rneui/themed';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as Font from 'expo-font';\nimport FontAwesome from '@expo/vector-icons/FontAwesome';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction cacheFonts(_x) {\n  return _cacheFonts.apply(this, arguments);\n}\nfunction _cacheFonts() {\n  _cacheFonts = _asyncToGenerator(function* (fonts) {\n    return fonts.map(function () {\n      var _ref6 = _asyncToGenerator(function* (font) {\n        return yield Font.loadAsync(font);\n      });\n      return function (_x3) {\n        return _ref6.apply(this, arguments);\n      };\n    }());\n  });\n  return _cacheFonts.apply(this, arguments);\n}\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"Login\",\n      children: [_jsx(Stack.Screen, {\n        name: \"TodoApp\",\n        component: TodoScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Login\",\n        component: LoginScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Registration\",\n        component: RegistrationScreen\n      })]\n    })\n  });\n  function LoginScreen(_ref) {\n    var navigation = _ref.navigation;\n    var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n    var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n    var handleLogin = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        var loginData = yield AsyncStorage.getItem('loginData');\n        var parsedLoginData = JSON.parse(loginData);\n        if (parsedLoginData.some(function (data) {\n          return data.username === username && data.password === password;\n        })) {\n          navigation.navigate('TodoApp');\n        } else {\n          alert('Invalid username or password');\n        }\n      });\n      return function handleLogin() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    return _jsxs(View, {\n      children: [_jsx(Input, {\n        placeholder: \"Username\",\n        value: username,\n        onChangeText: setUsername,\n        testID: \"login-username\"\n      }), _jsx(Input, {\n        placeholder: \"Password\",\n        value: password,\n        onChangeText: setPassword,\n        secureTextEntry: true,\n        testID: \"login-password\"\n      }), _jsx(Button, {\n        title: \"Login\",\n        onPress: handleLogin,\n        testID: \"login-button\"\n      }), _jsx(Button, {\n        title: \"Register\",\n        onPress: function onPress() {\n          return navigation.navigate('Registration');\n        },\n        testID: \"login-register\"\n      })]\n    });\n  }\n  function RegistrationScreen() {\n    var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      firstName = _useState6[0],\n      setFirstName = _useState6[1];\n    var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      lastName = _useState8[0],\n      setLastName = _useState8[1];\n    var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      username = _useState10[0],\n      setUsername = _useState10[1];\n    var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      phoneNumber = _useState12[0],\n      setPhoneNumber = _useState12[1];\n    var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      password = _useState14[0],\n      setPassword = _useState14[1];\n    var _useState15 = useState(''),\n      _useState16 = _slicedToArray(_useState15, 2),\n      confirmPassword = _useState16[0],\n      setConfirmPassword = _useState16[1];\n    var _useState17 = useState(''),\n      _useState18 = _slicedToArray(_useState17, 2),\n      email = _useState18[0],\n      setEmail = _useState18[1];\n    var _useState19 = useState(''),\n      _useState20 = _slicedToArray(_useState19, 2),\n      zipCode = _useState20[0],\n      setZipCode = _useState20[1];\n    var _useState21 = useState(false),\n      _useState22 = _slicedToArray(_useState21, 2),\n      newsletter = _useState22[0],\n      setNewsletter = _useState22[1];\n    var _useState23 = useState(''),\n      _useState24 = _slicedToArray(_useState23, 2),\n      firstNameError = _useState24[0],\n      setFirstNameError = _useState24[1];\n    var _useState25 = useState(''),\n      _useState26 = _slicedToArray(_useState25, 2),\n      lastNameError = _useState26[0],\n      setLastNameError = _useState26[1];\n    var _useState27 = useState(''),\n      _useState28 = _slicedToArray(_useState27, 2),\n      phoneNumberError = _useState28[0],\n      setPhoneNumberError = _useState28[1];\n    var _useState29 = useState(''),\n      _useState30 = _slicedToArray(_useState29, 2),\n      passwordError = _useState30[0],\n      setPasswordError = _useState30[1];\n    var _useState31 = useState(''),\n      _useState32 = _slicedToArray(_useState31, 2),\n      confirmPasswordError = _useState32[0],\n      setConfirmPasswordError = _useState32[1];\n    var _useState33 = useState(''),\n      _useState34 = _slicedToArray(_useState33, 2),\n      emailError = _useState34[0],\n      setEmailError = _useState34[1];\n    var _useState35 = useState(''),\n      _useState36 = _slicedToArray(_useState35, 2),\n      zipCodeError = _useState36[0],\n      setZipCodeError = _useState36[1];\n    var handleRegistration = function () {\n      var _ref4 = _asyncToGenerator(function* (_ref3) {\n        var navigation = _ref3.navigation;\n        var valid = true;\n        if (!/^[^\\d=?\\\\/@#%^&*()]+$/.test(firstName)) {\n          setFirstNameError('Error: First Name must only include word or symbol characters, no numbers.');\n          valid = false;\n        } else {\n          setFirstNameError('');\n        }\n        if (!/^[^\\d=?\\\\/@#%^&*()]+$/.test(lastName)) {\n          setLastNameError('Error: Last Name must only include word or symbol characters, no numbers.');\n          valid = false;\n        } else {\n          setLastNameError('');\n        }\n        if (!/^\\(\\d{3}\\) \\d{3}-\\d{4}$/.test(phoneNumber)) {\n          setPhoneNumberError('Error: Phone Number must be exactly (xxx) xxx-xxxx and all digits.');\n          valid = false;\n        } else {\n          setPhoneNumberError('');\n        }\n        if (!/\\S+@\\S+\\.\\S+/.test(email)) {\n          setEmailError('Error: Email must include an \"@\" sign and at least one period following it.');\n          valid = false;\n        } else {\n          setEmailError('');\n        }\n        if (!/(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[^A-Za-z0-9])(?=.{6,})/.test(password)) {\n          setPasswordError('Error: Password must contain at least one uppercase letter, one lowercase letter, one number, and one non-alpha numeric character and be at least 6 characters long.');\n          valid = false;\n        } else {\n          setPasswordError('');\n        }\n        if (password !== confirmPassword) {\n          setConfirmPasswordError('Error: Passwords do not match.');\n          valid = false;\n        } else {\n          setConfirmPasswordError('');\n        }\n        if (!/^\\d{5}$/.test(zipCode)) {\n          setZipCodeError('Error: Zip Code must include 5 digits.');\n          valid = false;\n        } else {\n          setZipCodeError('');\n        }\n        if (valid) {\n          var loginData = yield AsyncStorage.getItem('loginData');\n          var parsedLoginData = loginData ? JSON.parse(loginData) : [];\n          if (parsedLoginData.some(function (data) {\n            return data.username === username;\n          })) {\n            alert('Username already exists');\n          } else {\n            parsedLoginData.push({\n              username: username,\n              password: password\n            });\n            yield AsyncStorage.setItem('loginData', JSON.stringify(parsedLoginData));\n            navigation.navigate('Login');\n          }\n        }\n      });\n      return function handleRegistration(_x2) {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n    return _jsxs(View, {\n      children: [_jsx(Input, {\n        label: \"First Name\",\n        onChangeText: function onChangeText(text) {\n          return setFirstName(text);\n        },\n        value: firstName,\n        testID: \"firstname\"\n      }), firstNameError ? _jsx(Text, {\n        style: {\n          color: 'red'\n        },\n        children: firstNameError\n      }) : null, _jsx(Input, {\n        label: \"Last Name\",\n        onChangeText: function onChangeText(text) {\n          return setLastName(text);\n        },\n        value: lastName,\n        testID: \"lastname\"\n      }), lastNameError ? _jsx(Text, {\n        style: {\n          color: 'red'\n        },\n        children: lastNameError\n      }) : null, _jsx(Input, {\n        label: \"Username\",\n        onChangeText: function onChangeText(text) {\n          return setUsername(text);\n        },\n        value: username,\n        testID: \"username\"\n      }), _jsx(Input, {\n        label: \"Phone Number\",\n        onChangeText: function onChangeText(text) {\n          return setPhoneNumber(text);\n        },\n        value: phoneNumber,\n        testID: \"phonenumber\"\n      }), phoneNumberError ? _jsx(Text, {\n        style: {\n          color: 'red'\n        },\n        children: phoneNumberError\n      }) : null, _jsx(Input, {\n        label: \"Password\",\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        },\n        value: password,\n        secureTextEntry: true,\n        testID: \"password\"\n      }), passwordError ? _jsx(Text, {\n        style: {\n          color: 'red'\n        },\n        children: passwordError\n      }) : null, _jsx(Input, {\n        label: \"Confirm Password\",\n        onChangeText: function onChangeText(text) {\n          return setConfirmPassword(text);\n        },\n        value: confirmPassword,\n        secureTextEntry: true,\n        testID: \"confirmpassword\"\n      }), confirmPasswordError ? _jsx(Text, {\n        style: {\n          color: 'red'\n        },\n        children: confirmPasswordError\n      }) : null, _jsx(Input, {\n        label: \"Email\",\n        onChangeText: function onChangeText(text) {\n          return setEmail(text);\n        },\n        value: email,\n        testID: \"email\"\n      }), emailError ? _jsx(Text, {\n        style: {\n          color: 'red'\n        },\n        children: emailError\n      }) : null, _jsx(Input, {\n        label: \"Zip Code\",\n        onChangeText: function onChangeText(text) {\n          return setZipCode(text);\n        },\n        value: zipCode,\n        testID: \"zip\"\n      }), zipCodeError ? _jsx(Text, {\n        style: {\n          color: 'red'\n        },\n        children: zipCodeError\n      }) : null, _jsx(CheckBox, {\n        title: \"Subscribe to newsletter\",\n        checked: newsletter,\n        onPress: function onPress() {\n          return setNewsletter(!newsletter);\n        },\n        testID: \"newsletter\"\n      }), _jsx(Button, {\n        title: \"Register\",\n        onPress: handleRegistration,\n        testID: \"register-button\"\n      })]\n    });\n  }\n  function TodoScreen() {\n    cacheFonts([FontAwesome.font]);\n    var taskArray = [{\n      id: 1,\n      description: 'Clean room',\n      completed: false\n    }, {\n      id: 2,\n      description: 'Finish Homework',\n      completed: false\n    }, {\n      id: 3,\n      description: 'Meal Prep',\n      completed: true\n    }];\n    var _useState37 = useState(taskArray),\n      _useState38 = _slicedToArray(_useState37, 2),\n      tasks = _useState38[0],\n      setTasks = _useState38[1];\n    var _useState39 = useState(''),\n      _useState40 = _slicedToArray(_useState39, 2),\n      newTask = _useState40[0],\n      setNewTask = _useState40[1];\n    var handleAddTask = function handleAddTask() {\n      var newId = tasks.length > 0 ? tasks[tasks.length - 1].id + 1 : 1;\n      var newTaskObject = {\n        id: newId,\n        description: newTask,\n        completed: false\n      };\n      setTasks([].concat(_toConsumableArray(tasks), [newTaskObject]));\n      setNewTask('');\n    };\n    var handleCheckBox = function handleCheckBox(taskId) {\n      var updatedTasks = tasks.map(function (task) {\n        if (task.id === taskId) {\n          return _objectSpread(_objectSpread({}, task), {}, {\n            completed: !task.completed\n          });\n        }\n        return task;\n      });\n      setTasks(updatedTasks);\n    };\n    var renderItem = function renderItem(_ref5) {\n      var item = _ref5.item;\n      return _jsx(View, {\n        style: styles.taskContainer,\n        children: _jsx(View, {\n          style: styles.items,\n          children: _jsxs(View, {\n            style: styles.itemLeft,\n            children: [_jsx(CheckBox, {\n              containerStyle: styles.square,\n              checked: item.completed,\n              onPress: function onPress() {\n                return handleCheckBox(item.id);\n              },\n              checkedColor: \"#7B3E8C\"\n            }), _jsx(Text, {\n              style: [styles.taskDescription, item.completed && styles.completedTask],\n              children: item.description\n            })]\n          })\n        })\n      });\n    };\n    return _jsxs(SafeAreaView, {\n      style: styles.container,\n      children: [_jsxs(View, {\n        style: styles.rectangle,\n        children: [_jsx(Text, {\n          style: styles.sectionTitle,\n          children: \"To-Do\"\n        }), _jsx(FlatList, {\n          data: tasks,\n          renderItem: renderItem,\n          idExtractor: function idExtractor(item) {\n            return item.id;\n          }\n        })]\n      }), _jsxs(KeyboardAvoidingView, {\n        behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n        style: styles.writeTaskWrapper,\n        children: [_jsx(Input, {\n          style: styles.input,\n          placeholder: 'Type new task...',\n          maxWidth: 250,\n          inputContainerStyle: {\n            borderBottomWidth: 0\n          },\n          underlineColorAndroid: \"transparent\",\n          value: newTask,\n          onChangeText: function onChangeText(text) {\n            return setNewTask(text);\n          }\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return handleAddTask();\n          },\n          children: _jsx(View, {\n            style: styles.addWrapper,\n            children: _jsx(Text, {\n              style: styles.addText,\n              children: \"+\"\n            })\n          })\n        })]\n      }), _jsx(StatusBar, {\n        style: \"auto\"\n      })]\n    });\n  }\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#7B3E8C',\n    paddingTop: Platform.OS === 'ios' ? 200 : 100\n  },\n  taskDescription: {\n    fontSize: 18,\n    color: '#7B3E8C'\n  },\n  sectionTitle: {\n    transform: [{\n      translateY: 186\n    }],\n    transform: [{\n      translateX: 63\n    }],\n    top: 45,\n    fontSize: 35,\n    color: '#BF304A',\n    lineHeight: 46\n  },\n  rectangle: {\n    backgroundColor: 'white',\n    width: 430,\n    height: 807,\n    transform: [{\n      translateY: 80\n    }],\n    borderTopLeftRadius: 65\n  },\n  items: {\n    backgroundColor: '#F2F2F2',\n    width: 328,\n    padding: 10,\n    borderRadius: 22,\n    flexDirection: 'row',\n    marginBottom: 20\n  },\n  square: {\n    backgroundColor: 'transparent'\n  },\n  itemLeft: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flexWrap: 'wrap'\n  },\n  taskContainer: {\n    alignItems: 'center',\n    transform: [{\n      translateY: 70\n    }]\n  },\n  completedTask: {\n    textDecorationLine: 'line-through',\n    textDecorationStyle: 'solid',\n    color: '#888'\n  },\n  writeTaskWrapper: {\n    position: 'absolute',\n    bottom: 30,\n    width: '70%',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingLeft: 50\n  },\n  input: {\n    paddingVertical: 15,\n    paddingHorizontal: 15,\n    backgroundColor: '#F2F2F2',\n    borderRadius: 20,\n    borderColor: '#C0C0C0',\n    borderWidth: 1\n  },\n  addWrapper: {\n    width: 50,\n    height: 50,\n    bottom: 13,\n    backgroundColor: '#F2F2F2',\n    borderRadius: 50,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderColor: '#C0C0C0',\n    borderWidth: 1\n  },\n  loginButton: {\n    width: 108,\n    height: 58,\n    transform: [{\n      translateX: 243\n    }],\n    transform: [{\n      translateY: 580\n    }],\n    color: '#7B3E8C'\n  }\n});","map":{"version":3,"names":["StatusBar","React","useState","StyleSheet","View","FlatList","KeyboardAvoidingView","TouchableOpacity","SafeAreaView","Platform","Button","CheckBox","Input","Text","NavigationContainer","createNativeStackNavigator","AsyncStorage","Font","FontAwesome","jsx","_jsx","jsxs","_jsxs","cacheFonts","_x","_cacheFonts","apply","arguments","_asyncToGenerator","fonts","map","_ref6","font","loadAsync","_x3","Stack","App","children","Navigator","initialRouteName","Screen","name","component","TodoScreen","LoginScreen","RegistrationScreen","_ref","navigation","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","handleLogin","_ref2","loginData","getItem","parsedLoginData","JSON","parse","some","data","navigate","alert","placeholder","value","onChangeText","testID","secureTextEntry","title","onPress","_useState5","_useState6","firstName","setFirstName","_useState7","_useState8","lastName","setLastName","_useState9","_useState10","_useState11","_useState12","phoneNumber","setPhoneNumber","_useState13","_useState14","_useState15","_useState16","confirmPassword","setConfirmPassword","_useState17","_useState18","email","setEmail","_useState19","_useState20","zipCode","setZipCode","_useState21","_useState22","newsletter","setNewsletter","_useState23","_useState24","firstNameError","setFirstNameError","_useState25","_useState26","lastNameError","setLastNameError","_useState27","_useState28","phoneNumberError","setPhoneNumberError","_useState29","_useState30","passwordError","setPasswordError","_useState31","_useState32","confirmPasswordError","setConfirmPasswordError","_useState33","_useState34","emailError","setEmailError","_useState35","_useState36","zipCodeError","setZipCodeError","handleRegistration","_ref4","_ref3","valid","test","push","setItem","stringify","_x2","label","text","style","color","checked","taskArray","id","description","completed","_useState37","_useState38","tasks","setTasks","_useState39","_useState40","newTask","setNewTask","handleAddTask","newId","length","newTaskObject","concat","_toConsumableArray","handleCheckBox","taskId","updatedTasks","task","_objectSpread","renderItem","_ref5","item","styles","taskContainer","items","itemLeft","containerStyle","square","checkedColor","taskDescription","completedTask","container","rectangle","sectionTitle","idExtractor","behavior","OS","writeTaskWrapper","input","maxWidth","inputContainerStyle","borderBottomWidth","underlineColorAndroid","addWrapper","addText","create","flex","backgroundColor","paddingTop","fontSize","transform","translateY","translateX","top","lineHeight","width","height","borderTopLeftRadius","padding","borderRadius","flexDirection","marginBottom","alignItems","flexWrap","textDecorationLine","textDecorationStyle","position","bottom","justifyContent","paddingLeft","paddingVertical","paddingHorizontal","borderColor","borderWidth","loginButton"],"sources":["/Users/arianagarciafundora/Desktop/todo-app/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react'\nimport { StyleSheet, View, FlatList, KeyboardAvoidingView, TouchableOpacity, SafeAreaView, Platform, Button } from 'react-native';\nimport { CheckBox, Input, Text } from '@rneui/themed';\nimport { NavigationContainer } from '@react-navigation/native'\nimport { createNativeStackNavigator } from '@react-navigation/native-stack'\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as Font from 'expo-font'\nimport FontAwesome from '@expo/vector-icons/FontAwesome'\n\nasync function cacheFonts(fonts) {\n  return fonts.map(async (font) => await Font.loadAsync(font))\n}\n\nconst Stack = createNativeStackNavigator ()\n\nexport default function App() {\n  //navigation\n   return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName=\"Login\">\n        <Stack.Screen name=\"TodoApp\" component={TodoScreen} />\n        <Stack.Screen name=\"Login\" component={LoginScreen} />\n        <Stack.Screen name=\"Registration\" component={RegistrationScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  )\n\n\n  //LOGIN SCREEN --------------------------------------------------------------------------------------------\n  function LoginScreen ({navigation}) {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    const handleLogin = async () => {\n      //get data from local storage\n      const loginData = await AsyncStorage.getItem('loginData');\n      const parsedLoginData = JSON.parse(loginData);\n\n      //check if input data matches, if not alert user it is incorrect\n      if (parsedLoginData.some(data => data.username === username && data.password === password)) {\n      navigation.navigate('TodoApp')\n      } else {\n        alert('Invalid username or password');\n      } \n    };\n  \n    return (\n      <View>\n        <Input\n          placeholder=\"Username\"\n          value={username}\n          onChangeText={setUsername}\n          testID=\"login-username\"\n        />\n        <Input\n          placeholder=\"Password\"\n          value={password}\n          onChangeText={setPassword}\n          secureTextEntry={true}\n          testID=\"login-password\"\n        />\n        <Button title=\"Login\" onPress={handleLogin} testID=\"login-button\" />\n        <Button\n          title=\"Register\"\n          onPress={() => navigation.navigate('Registration')}\n          testID=\"login-register\"\n        />\n      </View>\n    )\n  }\n  \n  //REGISTRATION SCREEN -----------------------------------------------------------------------------------\n  function RegistrationScreen () {\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [username, setUsername] = useState('');\n    const [phoneNumber, setPhoneNumber] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [email, setEmail] = useState('');\n    const [zipCode, setZipCode] = useState('');\n    const [newsletter, setNewsletter] = useState(false);\n    const [firstNameError, setFirstNameError] = useState('');\n    const [lastNameError, setLastNameError] = useState('');\n    const [phoneNumberError, setPhoneNumberError] = useState('');\n    const [passwordError, setPasswordError] = useState('');\n    const [confirmPasswordError, setConfirmPasswordError] = useState('');\n    const [emailError, setEmailError] = useState('');\n    const [zipCodeError, setZipCodeError] = useState('');\n\n    //validate inputs\n    const handleRegistration = async ({navigation}) => {\n      let valid = true;\n\n      // First Name validation - must include word or symbol characters, no numbers\n      if (!/^[^\\d=?\\\\/@#%^&*()]+$/.test(firstName)) {\n        setFirstNameError('Error: First Name must only include word or symbol characters, no numbers.');\n        valid = false\n      } else {\n        setFirstNameError('')\n      }\n\n      // Last Name validation - must include word or symbol characters, no numbers\n      if (!/^[^\\d=?\\\\/@#%^&*()]+$/.test(lastName)) {\n        setLastNameError('Error: Last Name must only include word or symbol characters, no numbers.');\n        valid = false\n      } else {\n        setLastNameError('')\n      }\n\n      // Phone Number validation - must be exactly (xxx) xxx-xxxx\n      if (!/^\\(\\d{3}\\) \\d{3}-\\d{4}$/.test(phoneNumber)) {\n        setPhoneNumberError('Error: Phone Number must be exactly (xxx) xxx-xxxx and all digits.');\n        valid = false\n      } else {\n        setPhoneNumberError('')\n      }\n\n      // Email validation - must include an @ sign and at least one period following it\n      if (!/\\S+@\\S+\\.\\S+/.test(email)) {\n        setEmailError('Error: Email must include an \"@\" sign and at least one period following it.')\n        valid = false\n      } else {\n        setEmailError('')\n      }\n\n      // Password validation - upper case character, lowercase character, number character\n      if (!/(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[^A-Za-z0-9])(?=.{6,})/.test(password)) {\n        setPasswordError('Error: Password must contain at least one uppercase letter, one lowercase letter, one number, and one non-alpha numeric character and be at least 6 characters long.');\n        valid = false\n      } else {\n        setPasswordError('')\n      }\n\n      // Confirm Password validation \n      if (password !== confirmPassword) {\n        setConfirmPasswordError('Error: Passwords do not match.')\n        valid = false\n      } else {\n        setConfirmPasswordError('')\n      }\n\n      // Zip Code validation - must include 5 digits \n      if (!/^\\d{5}$/.test(zipCode)) {\n        setZipCodeError('Error: Zip Code must include 5 digits.')\n        valid = false\n      } else {\n        setZipCodeError('')\n      }\n\n      if (valid) {\n      // Get existing login data from AsyncStorage\n      const loginData = await AsyncStorage.getItem('loginData')\n      const parsedLoginData = loginData ? JSON.parse(loginData) : []\n\n      // Check if username already exists\n      if (parsedLoginData.some(data => data.username === username)) {\n        alert('Username already exists')\n      } else {\n        // Add new user data to loginData array\n        parsedLoginData.push({ username, password })\n        await AsyncStorage.setItem('loginData', JSON.stringify(parsedLoginData))\n        navigation.navigate('Login')\n      }\n    }\n  };\n    //registration form \n    return (\n      <View>\n        <Input\n          label=\"First Name\"\n          onChangeText={(text) => setFirstName(text)}\n          value={firstName}\n          testID=\"firstname\"\n        />\n        {firstNameError ? <Text style={{ color: 'red' }}>{firstNameError}</Text> : null}\n        <Input\n          label=\"Last Name\"\n          onChangeText={(text) => setLastName(text)}\n          value={lastName}\n          testID=\"lastname\"\n        />\n        {lastNameError ? <Text style={{ color: 'red' }}>{lastNameError}</Text> : null}\n        <Input\n          label=\"Username\"\n          onChangeText={(text) => setUsername(text)}\n          value={username}\n          testID=\"username\"\n        />\n        <Input\n          label=\"Phone Number\"\n          onChangeText={(text) => setPhoneNumber(text)}\n          value={phoneNumber}\n          testID=\"phonenumber\"\n        />\n        {phoneNumberError ? <Text style={{ color: 'red' }}>{phoneNumberError}</Text> : null}\n        <Input\n          label=\"Password\"\n          onChangeText={(text) => setPassword(text)}\n          value={password}\n          secureTextEntry={true}\n          testID=\"password\"\n        />\n        {passwordError ? <Text style={{ color: 'red' }}>{passwordError}</Text> : null}\n        <Input\n          label=\"Confirm Password\"\n          onChangeText={(text) => setConfirmPassword(text)}\n          value={confirmPassword}\n          secureTextEntry={true}\n          testID=\"confirmpassword\"\n        />\n        {confirmPasswordError ? <Text style={{ color: 'red' }}>{confirmPasswordError}</Text> : null}\n        <Input\n          label=\"Email\"\n          onChangeText={(text) => setEmail(text)}\n          value={email}\n          testID=\"email\"\n        />\n        {emailError ? <Text style={{ color: 'red' }}>{emailError}</Text> : null}\n        <Input\n          label=\"Zip Code\"\n          onChangeText={(text) => setZipCode(text)}\n          value={zipCode}\n          testID=\"zip\"\n        />\n        {zipCodeError ? <Text style={{ color: 'red' }}>{zipCodeError}</Text> : null}\n        <CheckBox\n          title=\"Subscribe to newsletter\"\n          checked={newsletter}\n          onPress={() => setNewsletter(!newsletter)}\n          testID=\"newsletter\"\n        />\n        <Button title=\"Register\" onPress={handleRegistration} testID=\"register-button\"  />\n     </View>\n    )\n  }\n\n\n  //TODO screen --------------------------------------------------------------------------------------------------------------------\n  function TodoScreen () {\n    cacheFonts([FontAwesome.font])\n    const taskArray = [\n      {id: 1, description: 'Clean room', completed: false},\n      {id: 2, description: 'Finish Homework', completed: false },\n      {id: 3, description: 'Meal Prep', completed: true }\n    ]\n    const [tasks, setTasks] = useState(taskArray)\n    const [newTask, setNewTask] = useState('')\n\n    const handleAddTask = () => {\n      const newId = tasks.length > 0 ? tasks[tasks.length - 1].id + 1 : 1\n      const newTaskObject = { id: newId, description: newTask, completed: false }\n      setTasks([...tasks, newTaskObject])\n      setNewTask('')\n    }\n\n    const handleCheckBox = (taskId) => {\n      const updatedTasks = tasks.map(task => {\n        if (task.id === taskId) {\n          return {...task, completed: !task.completed}\n  \n        }\n        return task\n      })\n      setTasks(updatedTasks)\n    }\n\n    const renderItem = ({item}) => (\n      <View style= {styles.taskContainer}>\n        <View style = {styles.items}>\n          <View style ={styles.itemLeft}>\n            <CheckBox\n            containerStyle={styles.square}\n            checked={item.completed}\n            onPress={() => handleCheckBox(item.id)}\n            checkedColor= '#7B3E8C'\n          />\n            <Text style={[styles.taskDescription, item.completed && styles.completedTask]}>{item.description}</Text>\n          </View>\n        </View>\n      </View>\n  )\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <View style ={styles.rectangle}>\n        <Text style = {styles.sectionTitle}>To-Do</Text>\n          <FlatList\n            data = {tasks}\n            renderItem = {renderItem}\n            idExtractor = {item => item.id}\n          />\n      </View>\n      <KeyboardAvoidingView \n        behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n        style = {styles.writeTaskWrapper}\n      >\n        <Input style= {styles.input} placeholder={'Type new task...'} maxWidth= {250} inputContainerStyle={{ borderBottomWidth: 0 }}\n        underlineColorAndroid='transparent' value={newTask} onChangeText={text => setNewTask(text)}/>\n\n        <TouchableOpacity onPress={() => handleAddTask()}>\n          <View style = {styles.addWrapper}>\n           <Text style = {styles.addText}>+</Text>\n          </View>\n        </TouchableOpacity>\n      </KeyboardAvoidingView>\n      <StatusBar style=\"auto\" />\n    </SafeAreaView>\n  );\n}\n}\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#7B3E8C',\n    paddingTop: Platform.OS === 'ios' ? 200 : 100\n  },\n  taskDescription: {\n    fontSize: 18,\n    color: '#7B3E8C',\n  },\n  sectionTitle:{\n    transform: [{translateY: 186}],\n    transform: [{translateX: 63}],\n    top: 45 ,\n    fontSize: 35,\n    color: '#BF304A',\n    lineHeight: 46\n    \n  }, \n  rectangle: {\n    backgroundColor: 'white',\n    width: 430,\n    height: 807,\n    transform: [{translateY: 80}],\n    borderTopLeftRadius: 65\n  },\n  items: {\n    backgroundColor: '#F2F2F2',\n    width: 328,\n    padding: 10,\n    borderRadius: 22,\n    flexDirection: 'row',\n    marginBottom: 20,\n    \n  },\n  square: {\n    backgroundColor: 'transparent',\n\n  },\n  itemLeft: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n  },\n  taskContainer: {\n    alignItems: 'center',\n    transform: [{translateY: 70}]\n  },\n  completedTask: {\n    textDecorationLine: 'line-through',\n    textDecorationStyle: 'solid',\n    color: '#888',\n  },\n  writeTaskWrapper: {\n    position: 'absolute',\n    bottom: 30,\n    width: '70%',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingLeft: 50\n\n  },\n  input: {\n    paddingVertical: 15,\n    paddingHorizontal: 15,\n    backgroundColor: '#F2F2F2',\n    borderRadius: 20,\n    borderColor: '#C0C0C0',\n    borderWidth: 1\n  },\n  addWrapper: {\n    width: 50,\n    height: 50,\n    bottom: 13,\n    backgroundColor: '#F2F2F2',\n    borderRadius: 50,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderColor: '#C0C0C0',\n    borderWidth: 1\n  },\n  loginButton: {\n    width: 108,\n    height: 58,\n    transform: [{translateX: 243}],\n    transform: [{translateY: 580}],\n    color: '#7B3E8C'\n  }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}