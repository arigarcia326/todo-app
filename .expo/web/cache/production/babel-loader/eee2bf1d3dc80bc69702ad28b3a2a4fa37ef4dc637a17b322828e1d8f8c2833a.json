{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import FlatList from\"react-native-web/dist/exports/FlatList\";import{Text,Button}from'@rneui/themed';import{NavigationContainer}from'@react-navigation/native';import{createNativeStackNavigator}from'@react-navigation/native-stack';import*as Font from'expo-font';import FontAwesome from'@expo/vector-icons/FontAwesome';import{triviaData}from\"./src/data/data\";import UserInput from\"./src/components/UserInput/UserInput\";import Matching from\"./src/components/Matching/Matching\";import DropDown from\"./src/components/DropDown/DropDown\";import Summary from\"./src/components/Summary/Summary\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function cacheFonts(_x){return _cacheFonts.apply(this,arguments);}function _cacheFonts(){_cacheFonts=_asyncToGenerator(function*(fonts){return fonts.map(function(){var _ref3=_asyncToGenerator(function*(font){return yield Font.loadAsync(font);});return function(_x2){return _ref3.apply(this,arguments);};}());});return _cacheFonts.apply(this,arguments);}var Stack=createNativeStackNavigator();export default function App(){return _jsx(NavigationContainer,{children:_jsxs(Stack.Navigator,{initialRouteName:\"Home\",children:[_jsx(Stack.Screen,{name:\"Home\",component:HomeScreen,options:{headerStyle:{borderBottomWidth:0,backgroundColor:'#190840'},headerTitleStyle:{marginLeft:10,color:'white'}}}),_jsx(Stack.Screen,{name:\"user input\",component:UserInput,options:{headerStyle:{borderBottomWidth:0,backgroundColor:'#190840'},headerTintColor:'white',headerTitleStyle:{marginLeft:10,color:'white'}}}),_jsx(Stack.Screen,{name:\"matching\",component:Matching,options:{headerStyle:{borderBottomWidth:0,backgroundColor:'#190840'},headerTintColor:'white',headerTitleStyle:{marginLeft:10,color:'white'}}}),_jsx(Stack.Screen,{name:\"drop down\",component:DropDown,options:{headerStyle:{borderBottomWidth:0,backgroundColor:'#190840'},headerTintColor:'white',headerTitleStyle:{marginLeft:10,color:'white'}}}),_jsx(Stack.Screen,{name:\"Summary\",component:Summary,options:{headerStyle:{borderBottomWidth:0,backgroundColor:'#190840'},headerTintColor:'white',headerTitleStyle:{marginLeft:10,color:'white'}}})]})});function HomeScreen(_ref){var navigation=_ref.navigation;cacheFonts([FontAwesome.font]);return _jsxs(View,{style:styles.container,children:[_jsx(Text,{style:styles.triviaTitle,children:\"Trivia Challenge\"}),_jsx(Text,{style:styles.subtitle,children:\"Choose your subject:\"}),_jsx(FlatList,{data:triviaData,keyExtractor:function keyExtractor(item){return item.triviaName;},renderItem:function renderItem(_ref2){var item=_ref2.item;return _jsx(View,{style:styles.buttonContainer,children:_jsx(Button,{title:item.triviaName,buttonStyle:styles.buttonStyle,titleStyle:styles.buttonTitle,onPress:function onPress(){switch(item.triviaItems[0].type){case'user-input':navigation.navigate('user input',{triviaName:item.triviaName,triviaItems:item.triviaItems});break;case'matching':navigation.navigate('matching',{triviaName:item.triviaName,triviaItems:item.triviaItems});break;case'drop-down':navigation.navigate('drop down',{triviaName:item.triviaName,triviaItems:item.triviaItems});break;default:console.log('Invalid type');}}})});}})]});}}var styles=StyleSheet.create({container:{flex:1,backgroundColor:'#190840',justifyContent:'center',alignItems:'center'},triviaTitle:{fontSize:40,fontWeight:'bold',color:'white',textAlign:'center',marginTop:20},subtitle:{color:'white',fontSize:30,textAlign:'center',marginTop:10},buttonContainer:{marginTop:30,paddingTop:10},buttonTitle:{fontSize:30,fontWeight:'bold'},buttonStyle:{width:300,height:70,borderRadius:15,backgroundColor:'#DB2EF2'}});","map":{"version":3,"names":["React","StyleSheet","View","FlatList","Text","Button","NavigationContainer","createNativeStackNavigator","Font","FontAwesome","triviaData","UserInput","Matching","DropDown","Summary","jsx","_jsx","jsxs","_jsxs","cacheFonts","_x","_cacheFonts","apply","arguments","_asyncToGenerator","fonts","map","_ref3","font","loadAsync","_x2","Stack","App","children","Navigator","initialRouteName","Screen","name","component","HomeScreen","options","headerStyle","borderBottomWidth","backgroundColor","headerTitleStyle","marginLeft","color","headerTintColor","_ref","navigation","style","styles","container","triviaTitle","subtitle","data","keyExtractor","item","triviaName","renderItem","_ref2","buttonContainer","title","buttonStyle","titleStyle","buttonTitle","onPress","triviaItems","type","navigate","console","log","create","flex","justifyContent","alignItems","fontSize","fontWeight","textAlign","marginTop","paddingTop","width","height","borderRadius"],"sources":["/Users/arianagarciafundora/Desktop/todo-app/App.js"],"sourcesContent":["import React from 'react'\nimport { StyleSheet, View, FlatList } from 'react-native';\nimport { Text, Button } from '@rneui/themed'\nimport { NavigationContainer } from '@react-navigation/native'\nimport { createNativeStackNavigator } from '@react-navigation/native-stack'\nimport * as Font from 'expo-font'\nimport FontAwesome from '@expo/vector-icons/FontAwesome'\nimport { triviaData } from './src/data/data';\nimport UserInput from './src/components/UserInput/UserInput';\nimport Matching from './src/components/Matching/Matching';\nimport DropDown from './src/components/DropDown/DropDown';\nimport Summary from './src/components/Summary/Summary';\n\n\nasync function cacheFonts(fonts) {\n  return fonts.map(async (font) => await Font.loadAsync(font))\n}\n\nconst Stack = createNativeStackNavigator ()\n\n\nexport default function App() {\n  //navigation\n   return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName='Home'>\n        <Stack.Screen name='Home' component={HomeScreen} options={{\n          headerStyle: {\n            borderBottomWidth: 0,\n            backgroundColor: '#190840'\n          },\n          headerTitleStyle: {\n            marginLeft: 10,\n            color: 'white'\n          }\n        }}/>\n        <Stack.Screen name='user input' component={UserInput} options={{\n          headerStyle: {\n            borderBottomWidth: 0,\n            backgroundColor: '#190840'\n          },\n          headerTintColor: 'white',\n          headerTitleStyle: {\n            marginLeft: 10,\n            color: 'white'\n          }\n        }} />\n        <Stack.Screen name='matching' component={Matching} options={{\n          headerStyle: {\n            borderBottomWidth: 0,\n            backgroundColor: '#190840'\n          },\n          headerTintColor: 'white',\n          headerTitleStyle: {\n            marginLeft: 10,\n            color: 'white'\n          }\n        }} />\n        <Stack.Screen name='drop down' component={DropDown} options={{\n          headerStyle: {\n            borderBottomWidth: 0,\n            backgroundColor: '#190840'\n          },\n          headerTintColor: 'white',\n          headerTitleStyle: {\n            marginLeft: 10,\n            color: 'white'\n          }\n        }} />\n        <Stack.Screen name='Summary' component={Summary} options={{\n          headerStyle: {\n            borderBottomWidth: 0,\n            backgroundColor: '#190840'\n          },\n          headerTintColor: 'white',\n          headerTitleStyle: {\n            marginLeft: 10,\n            color: 'white'\n          }\n        }} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  )\n  \n  //HOME SCREEN\n  function HomeScreen ({ navigation }) {\n    cacheFonts([FontAwesome.font])\n    return (\n      <View style={styles.container}>\n        <Text style= {styles.triviaTitle}>Trivia Challenge</Text>\n        <Text style={styles.subtitle}>Choose your subject:</Text>\n        <FlatList\n          data={triviaData}\n          keyExtractor={(item) => item.triviaName}\n          renderItem={({ item }) => \n          <View style={styles.buttonContainer}>\n          <Button \n            title= {item.triviaName} \n            buttonStyle={styles.buttonStyle} \n            titleStyle={styles.buttonTitle} \n            onPress={() => {\n              switch (item.triviaItems[0].type) {\n                case 'user-input':\n                  navigation.navigate('user input', {\n                    triviaName: item.triviaName, \n                    triviaItems: item.triviaItems\n                  })\n                  break\n                case 'matching': \n                  navigation.navigate('matching', {\n                    triviaName: item.triviaName,\n                    triviaItems: item.triviaItems\n                  })\n                  break\n                case 'drop-down':\n                  navigation.navigate('drop down', {\n                    triviaName: item.triviaName,\n                    triviaItems: item.triviaItems\n                  })\n                  break\n                default:\n                  console.log('Invalid type')\n            }}}\n            />\n          </View>\n          }\n        />\n      </View>\n    )\n\n  }\n\n\n}\n\n//styling\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#190840',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  triviaTitle: {\n    fontSize: 40,\n    fontWeight: 'bold',\n    color: 'white',\n    textAlign: 'center',\n    marginTop: 20\n  },\n  subtitle: {\n    color: 'white',\n    fontSize: 30,\n    textAlign: 'center',\n    marginTop: 10\n  },\n  buttonContainer: {\n    marginTop: 30,\n    paddingTop: 10,\n    \n  },\n  buttonTitle: {\n    fontSize: 30,\n    fontWeight: 'bold'\n  },\n  buttonStyle: {\n    width: 300,\n    height: 70,\n    borderRadius: 15,\n    backgroundColor: '#DB2EF2'\n  }\n\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}