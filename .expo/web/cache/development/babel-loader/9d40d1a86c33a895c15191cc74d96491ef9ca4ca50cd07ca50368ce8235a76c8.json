{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { CheckBox, Input, Text } from '@rneui/themed';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as Font from 'expo-font';\nimport FontAwesome from '@expo/vector-icons/FontAwesome';\nimport { triviaData } from \"./src/data/data\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction cacheFonts(_x) {\n  return _cacheFonts.apply(this, arguments);\n}\nfunction _cacheFonts() {\n  _cacheFonts = _asyncToGenerator(function* (fonts) {\n    return fonts.map(function () {\n      var _ref2 = _asyncToGenerator(function* (font) {\n        return yield Font.loadAsync(font);\n      });\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n  });\n  return _cacheFonts.apply(this, arguments);\n}\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsx(Stack.Navigator, {\n      initialRouteName: \"Home\",\n      children: _jsx(Stack.Screen, {\n        name: \"Home\",\n        component: HomeScreen\n      })\n    })\n  });\n  function HomeScreen() {\n    cacheFonts([FontAwesome.font]);\n    return _jsxs(View, {\n      children: [_jsx(Text, {\n        children: \"Trivia\"\n      }), _jsx(FlatList, {\n        data: triviaData,\n        keyExtractor: function keyExtractor(item) {\n          return item.triviaName;\n        },\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return _jsx(View, {\n            children: _jsx(Button, {\n              title: item.triviaName,\n              onPress: function onPress() {\n                return console.log(item.triviaName);\n              }\n            })\n          });\n        }\n      })]\n    });\n  }\n}","map":{"version":3,"names":["StatusBar","React","useState","StyleSheet","View","FlatList","KeyboardAvoidingView","TouchableOpacity","SafeAreaView","Platform","Button","CheckBox","Input","Text","NavigationContainer","createNativeStackNavigator","Font","FontAwesome","triviaData","jsx","_jsx","jsxs","_jsxs","cacheFonts","_x","_cacheFonts","apply","arguments","_asyncToGenerator","fonts","map","_ref2","font","loadAsync","_x2","Stack","App","children","Navigator","initialRouteName","Screen","name","component","HomeScreen","data","keyExtractor","item","triviaName","renderItem","_ref","title","onPress","console","log"],"sources":["/Users/arianagarciafundora/Desktop/todo-app/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react'\nimport { StyleSheet, View, FlatList, KeyboardAvoidingView, TouchableOpacity, SafeAreaView, Platform, Button } from 'react-native';\nimport { CheckBox, Input, Text } from '@rneui/themed';\nimport { NavigationContainer } from '@react-navigation/native'\nimport { createNativeStackNavigator } from '@react-navigation/native-stack'\n\nimport * as Font from 'expo-font'\nimport FontAwesome from '@expo/vector-icons/FontAwesome'\n\nimport { triviaData } from './src/data/data';\n\n\nasync function cacheFonts(fonts) {\n  return fonts.map(async (font) => await Font.loadAsync(font))\n}\n\nconst Stack = createNativeStackNavigator ()\n\n\nexport default function App() {\n  //navigation\n   return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName=\"Home\">\n        <Stack.Screen name=\"Home\" component={HomeScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  )\n\n  function HomeScreen () {\n    cacheFonts([FontAwesome.font])\n    \n    return (\n      <View>\n        <Text>Trivia</Text>\n        <FlatList\n          data={triviaData}\n          keyExtractor={(item) => item.triviaName}\n          renderItem={({ item }) => \n          <View>\n          <Button title= {item.triviaName} onPress={() => console.log(item.triviaName)} />\n          </View>\n          }\n        />\n      </View>\n    )\n\n  }\n\n\n}\n\n//const styles = StyleSheet.create({\n  \n//})\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAC3C,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,oBAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,YAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,MAAA;AAEvC,SAASC,QAAQ,EAAEC,KAAK,EAAEC,IAAI,QAAQ,eAAe;AACrD,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAE3E,OAAO,KAAKC,IAAI,MAAM,WAAW;AACjC,OAAOC,WAAW,MAAM,gCAAgC;AAExD,SAASC,UAAU;AAA0B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAG9BC,UAAUA,CAAAC,EAAA;EAAA,OAAAC,WAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,YAAA;EAAAA,WAAA,GAAAG,iBAAA,CAAzB,WAA0BC,KAAK,EAAE;IAC/B,OAAOA,KAAK,CAACC,GAAG;MAAA,IAAAC,KAAA,GAAAH,iBAAA,CAAC,WAAOI,IAAI;QAAA,aAAWhB,IAAI,CAACiB,SAAS,CAACD,IAAI,CAAC;MAAA;MAAA,iBAAAE,GAAA;QAAA,OAAAH,KAAA,CAAAL,KAAA,OAAAC,SAAA;MAAA;IAAA,IAAC;EAC9D,CAAC;EAAA,OAAAF,WAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAED,IAAMQ,KAAK,GAAGpB,0BAA0B,EAAG;AAG3C,eAAe,SAASqB,GAAGA,CAAA,EAAG;EAE3B,OACChB,IAAA,CAACN,mBAAmB;IAAAuB,QAAA,EAClBjB,IAAA,CAACe,KAAK,CAACG,SAAS;MAACC,gBAAgB,EAAC,MAAM;MAAAF,QAAA,EACtCjB,IAAA,CAACe,KAAK,CAACK,MAAM;QAACC,IAAI,EAAC,MAAM;QAACC,SAAS,EAAEC;MAAW;IAAG;EACnC,EACE;EAGxB,SAASA,UAAUA,CAAA,EAAI;IACrBpB,UAAU,CAAC,CAACN,WAAW,CAACe,IAAI,CAAC,CAAC;IAE9B,OACEV,KAAA,CAAClB,IAAI;MAAAiC,QAAA,GACHjB,IAAA,CAACP,IAAI;QAAAwB,QAAA,EAAC;MAAM,EAAO,EACnBjB,IAAA,CAACf,QAAQ;QACPuC,IAAI,EAAE1B,UAAW;QACjB2B,YAAY,EAAE,SAAAA,aAACC,IAAI;UAAA,OAAKA,IAAI,CAACC,UAAU;QAAA,CAAC;QACxCC,UAAU,EAAE,SAAAA,WAAAC,IAAA;UAAA,IAAGH,IAAI,GAAAG,IAAA,CAAJH,IAAI;UAAA,OACnB1B,IAAA,CAAChB,IAAI;YAAAiC,QAAA,EACLjB,IAAA,CAACV,MAAM;cAACwC,KAAK,EAAGJ,IAAI,CAACC,UAAW;cAACI,OAAO,EAAE,SAAAA,QAAA;gBAAA,OAAMC,OAAO,CAACC,GAAG,CAACP,IAAI,CAACC,UAAU,CAAC;cAAA;YAAC;UAAG,EACzE;QAAA;MACN,EACD;IAAA,EACG;EAGX;AAGF"},"metadata":{},"sourceType":"module","externalDependencies":[]}