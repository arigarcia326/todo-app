{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { CheckBox, Input, Text } from '@rneui/themed';\nimport { NavigationContainer, NavigationRouteContext } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as Font from 'expo-font';\nimport FontAwesome from '@expo/vector-icons/FontAwesome';\nimport { triviaData } from \"./src/data/data\";\nimport UserInput from \"./src/components/userInput/userInput\";\nimport Matching from \"./src/components/Matching/Matching\";\nimport DropDown from \"./src/components/DropDown/DropDown\";\nimport Summary from \"./src/components/Summary/Summary\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction cacheFonts(_x) {\n  return _cacheFonts.apply(this, arguments);\n}\nfunction _cacheFonts() {\n  _cacheFonts = _asyncToGenerator(function* (fonts) {\n    return fonts.map(function () {\n      var _ref3 = _asyncToGenerator(function* (font) {\n        return yield Font.loadAsync(font);\n      });\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n  });\n  return _cacheFonts.apply(this, arguments);\n}\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"Home\",\n      children: [_jsx(Stack.Screen, {\n        name: \"Home\",\n        component: HomeScreen\n      }), _jsx(Stack.Screen, {\n        name: \"user-input\",\n        component: UserInput\n      }), _jsx(Stack.Screen, {\n        name: \"matching\",\n        component: Matching\n      }), _jsx(Stack.Screen, {\n        name: \"drop-down\",\n        component: DropDown\n      }), _jsx(Stack.Screen, {\n        name: \"Summary\",\n        component: Summary\n      })]\n    })\n  });\n  function HomeScreen(_ref) {\n    var navigation = _ref.navigation;\n    cacheFonts([FontAwesome.font]);\n    return _jsxs(View, {\n      children: [_jsx(Text, {\n        children: \"Trivia\"\n      }), _jsx(FlatList, {\n        data: triviaData,\n        keyExtractor: function keyExtractor(item) {\n          return item.triviaName;\n        },\n        renderItem: function renderItem(_ref2) {\n          var item = _ref2.item;\n          return _jsx(View, {\n            children: _jsx(Button, {\n              title: item.triviaName,\n              title: true,\n              onPress: function onPress() {\n                switch (item.triviaItems[0].type) {\n                  case 'user-input':\n                    navigation.navigate('user-input', {\n                      triviaName: item.triviaName,\n                      triviaItems: item.triviaItems\n                    });\n                    break;\n                  case 'matching':\n                    navigation.navigate('matching', {\n                      triviaName: item.triviaName,\n                      triviaItems: item.triviaItems\n                    });\n                    break;\n                  case 'drop-down':\n                    navigation.navigate('drop-down', {\n                      triviaName: item.triviaName,\n                      triviaItems: item.triviaItems\n                    });\n                    break;\n                  default:\n                    console.log('Invalid type');\n                }\n              }\n            })\n          });\n        }\n      })]\n    });\n  }\n}\nvar styles = StyleSheet.create({});","map":{"version":3,"names":["StatusBar","React","useState","StyleSheet","View","FlatList","KeyboardAvoidingView","TouchableOpacity","SafeAreaView","Platform","Button","CheckBox","Input","Text","NavigationContainer","NavigationRouteContext","createNativeStackNavigator","Font","FontAwesome","triviaData","UserInput","Matching","DropDown","Summary","jsx","_jsx","jsxs","_jsxs","cacheFonts","_x","_cacheFonts","apply","arguments","_asyncToGenerator","fonts","map","_ref3","font","loadAsync","_x2","Stack","App","children","Navigator","initialRouteName","Screen","name","component","HomeScreen","_ref","navigation","data","keyExtractor","item","triviaName","renderItem","_ref2","title","onPress","triviaItems","type","navigate","console","log","styles","create"],"sources":["/Users/arianagarciafundora/Desktop/todo-app/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react'\nimport { StyleSheet, View, FlatList, KeyboardAvoidingView, TouchableOpacity, SafeAreaView, Platform, Button } from 'react-native';\nimport { CheckBox, Input, Text } from '@rneui/themed'\nimport { NavigationContainer, NavigationRouteContext } from '@react-navigation/native'\nimport { createNativeStackNavigator } from '@react-navigation/native-stack'\n\nimport * as Font from 'expo-font'\nimport FontAwesome from '@expo/vector-icons/FontAwesome'\n\nimport { triviaData } from './src/data/data';\nimport UserInput from './src/components/userInput/userInput';\nimport Matching from './src/components/Matching/Matching';\nimport DropDown from './src/components/DropDown/DropDown';\nimport Summary from './src/components/Summary/Summary';\n\n\nasync function cacheFonts(fonts) {\n  return fonts.map(async (font) => await Font.loadAsync(font))\n}\n\nconst Stack = createNativeStackNavigator ()\n\n\nexport default function App() {\n  //navigation\n   return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName='Home'>\n        <Stack.Screen name='Home' component={HomeScreen} />\n        <Stack.Screen name='user-input' component={UserInput} />\n        <Stack.Screen name='matching' component={Matching}/>\n        <Stack.Screen name='drop-down' component={DropDown} />\n        <Stack.Screen name='Summary' component={Summary} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  )\n\n  function HomeScreen ({ navigation }) {\n    cacheFonts([FontAwesome.font])\n   \n    return (\n      <View>\n        <Text>Trivia</Text>\n        <FlatList\n          data={triviaData}\n          keyExtractor={(item) => item.triviaName}\n          renderItem={({ item }) => \n          <View>\n          <Button title= {item.triviaName} title onPress={() => {\n            switch (item.triviaItems[0].type) {\n              case 'user-input':\n                navigation.navigate('user-input', {\n                  triviaName: item.triviaName, \n                  triviaItems: item.triviaItems\n                })\n                break\n              case 'matching': \n                navigation.navigate('matching', {\n                  triviaName: item.triviaName,\n                  triviaItems: item.triviaItems\n                })\n                break\n              case 'drop-down':\n                navigation.navigate('drop-down', {\n                  triviaName: item.triviaName,\n                  triviaItems: item.triviaItems\n                })\n                break\n              default:\n                console.log('Invalid type')\n          }}}\n            />\n          </View>\n          }\n        />\n      </View>\n    )\n\n  }\n\n\n}\n\nconst styles = StyleSheet.create({\n  \n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}