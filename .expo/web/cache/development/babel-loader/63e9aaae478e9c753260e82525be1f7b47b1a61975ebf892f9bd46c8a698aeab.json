{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport { Text, View } from '@rneui/themed';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function DropDown(_ref) {\n  var route = _ref.route;\n  var _route$params = route.params,\n    triviaName = _route$params.triviaName,\n    triviaItems = _route$params.triviaItems;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedOption = _useState2[0],\n    setSelectedOption = _useState2[1];\n  var handleOptionSelect = function handleOptionSelect(option) {\n    setSelectedOption(option);\n  };\n  var renderSentence = function renderSentence() {\n    var _triviaItems$prompt$s = triviaItems.prompt.split(\"__noun__\"),\n      _triviaItems$prompt$s2 = _slicedToArray(_triviaItems$prompt$s, 2),\n      beforeDropDown = _triviaItems$prompt$s2[0],\n      afterDropDown = _triviaItems$prompt$s2[1];\n    return _jsxs(View, {\n      style: {\n        flexDirection: \"row\",\n        alignItems: \"center\"\n      },\n      children: [_jsx(Text, {\n        children: beforeDropDown\n      }), _jsx(DropDown, {\n        options: options,\n        selectedOption: selectedOption,\n        onSelect: handleOptionSelect\n      }), _jsx(Text, {\n        children: afterDropDown\n      })]\n    });\n  };\n  return _jsxs(View, {\n    children: [renderSentence(), _jsx(Button, {\n      onPress: function onPress() {\n        return alert(\"Selected option: \" + selectedOption);\n      },\n      children: _jsx(Text, {\n        children: \"Check Answer\"\n      })\n    })]\n  });\n}\n;","map":{"version":3,"names":["React","useState","Text","View","Dropdown","jsx","_jsx","jsxs","_jsxs","DropDown","_ref","route","_route$params","params","triviaName","triviaItems","_useState","_useState2","_slicedToArray","selectedOption","setSelectedOption","handleOptionSelect","option","renderSentence","_triviaItems$prompt$s","prompt","split","_triviaItems$prompt$s2","beforeDropDown","afterDropDown","style","flexDirection","alignItems","children","options","onSelect","Button","onPress","alert"],"sources":["/Users/arianagarciafundora/Desktop/todo-app/src/components/DropDown/DropDown.js"],"sourcesContent":["import React, {useState} from 'react'\nimport { Text, View } from '@rneui/themed'\nimport Dropdown from 'react-bootstrap/Dropdown';\n\nexport default function DropDown ({route}) {\n  const { triviaName, triviaItems } = route.params;\n  const [selectedOption, setSelectedOption] = useState(null);\n  const handleOptionSelect = (option) => {\n    setSelectedOption(option);\n  };\n\n  const renderSentence = () => {\n    const [beforeDropDown, afterDropDown] = triviaItems.prompt.split(\"__noun__\");\n    return (\n      <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n        <Text>{beforeDropDown}</Text>\n        <DropDown\n          options={options}\n          selectedOption={selectedOption}\n          onSelect={handleOptionSelect}\n        />\n        <Text>{afterDropDown}</Text>\n      </View>\n    );\n  };\n\n  return (\n    <View>\n      {renderSentence()}\n      <Button onPress={() => alert(`Selected option: ${selectedOption}`)}>\n        <Text>Check Answer</Text>\n      </Button>\n    </View>\n  );\n};\n\n"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,SAASC,IAAI,EAAEC,IAAI,QAAQ,eAAe;AAC1C,OAAOC,QAAQ,MAAM,0BAA0B;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEhD,eAAe,SAASC,QAAQA,CAAAC,IAAA,EAAW;EAAA,IAARC,KAAK,GAAAD,IAAA,CAALC,KAAK;EACtC,IAAAC,aAAA,GAAoCD,KAAK,CAACE,MAAM;IAAxCC,UAAU,GAAAF,aAAA,CAAVE,UAAU;IAAEC,WAAW,GAAAH,aAAA,CAAXG,WAAW;EAC/B,IAAAC,SAAA,GAA4Cf,QAAQ,CAAC,IAAI,CAAC;IAAAgB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAnDG,cAAc,GAAAF,UAAA;IAAEG,iBAAiB,GAAAH,UAAA;EACxC,IAAMI,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAIC,MAAM,EAAK;IACrCF,iBAAiB,CAACE,MAAM,CAAC;EAC3B,CAAC;EAED,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;IAC3B,IAAAC,qBAAA,GAAwCT,WAAW,CAACU,MAAM,CAACC,KAAK,CAAC,UAAU,CAAC;MAAAC,sBAAA,GAAAT,cAAA,CAAAM,qBAAA;MAArEI,cAAc,GAAAD,sBAAA;MAAEE,aAAa,GAAAF,sBAAA;IACpC,OACEnB,KAAA,CAACL,IAAI;MAAC2B,KAAK,EAAE;QAAEC,aAAa,EAAE,KAAK;QAAEC,UAAU,EAAE;MAAS,CAAE;MAAAC,QAAA,GAC1D3B,IAAA,CAACJ,IAAI;QAAA+B,QAAA,EAAEL;MAAc,EAAQ,EAC7BtB,IAAA,CAACG,QAAQ;QACPyB,OAAO,EAAEA,OAAQ;QACjBf,cAAc,EAAEA,cAAe;QAC/BgB,QAAQ,EAAEd;MAAmB,EAC7B,EACFf,IAAA,CAACJ,IAAI;QAAA+B,QAAA,EAAEJ;MAAa,EAAQ;IAAA,EACvB;EAEX,CAAC;EAED,OACErB,KAAA,CAACL,IAAI;IAAA8B,QAAA,GACFV,cAAc,EAAE,EACjBjB,IAAA,CAAC8B,MAAM;MAACC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMC,KAAK,uBAAqBnB,cAAc,CAAG;MAAA,CAAC;MAAAc,QAAA,EACjE3B,IAAA,CAACJ,IAAI;QAAA+B,QAAA,EAAC;MAAY;IAAO,EAClB;EAAA,EACJ;AAEX;AAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}