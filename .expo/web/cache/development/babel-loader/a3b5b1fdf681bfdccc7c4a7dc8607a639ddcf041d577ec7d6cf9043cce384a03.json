{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport { Text, Button } from '@rneui/themed';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Matching(_ref) {\n  var route = _ref.route;\n  var _route$params = route.params,\n    triviaName = _route$params.triviaName,\n    triviaItems = _route$params.triviaItems;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    matchedItems = _useState2[0],\n    setMatchedItems = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedOption = _useState4[0],\n    setSelectedOption = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    selectedValue = _useState6[0],\n    setSelectedValue = _useState6[1];\n  var handleMatch = function handleMatch(option, value, index) {\n    var matchedItemIndex = matchedItems.findIndex(function (item) {\n      return item.index === index;\n    });\n    if (matchedItemIndex >= 0) {\n      var updatedMatchedItems = _toConsumableArray(matchedItems);\n      updatedMatchedItems[matchedItemIndex] = {\n        option: option,\n        value: value,\n        index: index\n      };\n      setMatchedItems(updatedMatchedItems);\n    } else {\n      setMatchedItems([].concat(_toConsumableArray(matchedItems), [{\n        option: option,\n        value: value,\n        index: index\n      }]));\n    }\n    setSelectedOption(null);\n    setSelectedValue(null);\n  };\n  var handleCheckAnswers = function handleCheckAnswers() {\n    var isAllMatched = matchedItems.length === triviaItems.length;\n    if (isAllMatched) {\n      var isAllCorrect = matchedItems.every(function (item) {\n        return triviaItems.filter(function (t) {\n          return t.option === item.option && t.value === item.value;\n        }).length > 0;\n      });\n      var result = {\n        matchedItems: matchedItems,\n        isAllCorrect: isAllCorrect\n      };\n      navigation.navigate('Summary', {\n        result: result\n      });\n    } else {\n      alert('Not all items are matched.');\n    }\n  };\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return _jsxs(View, {\n      style: styles.matchingContainer,\n      children: [_jsx(Text, {\n        style: styles.promptStyle,\n        children: item.prompt\n      }), _jsxs(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-between'\n        },\n        children: [_jsx(View, {\n          style: {\n            flex: 1,\n            marginRight: 8\n          },\n          children: item.answer.map(function (option, index) {\n            return _jsx(Button, {\n              titleStyle: styles.optionStyle,\n              title: option.option,\n              buttonStyle: {\n                backgroundColor: selectedOption === option.option ? 'yellow' : matchedItems.find(function (matchedItem) {\n                  return matchedItem.option === option.option && matchedItem.value === null;\n                }) ? 'orange' : 'white',\n                borderWidth: 1,\n                borderColor: 'black',\n                padding: 16,\n                marginBottom: 8,\n                borderRadius: 8\n              },\n              onPress: function onPress() {\n                return handleMatch(option.option, selectedValue, index);\n              }\n            }, item.prompt + \"_\" + option.option);\n          })\n        }), _jsx(View, {\n          style: {\n            flex: 1,\n            marginLeft: 8\n          },\n          children: item.answer.map(function (value, index) {\n            return _jsx(Button, {\n              title: value.value,\n              titleStyle: styles.valueStyle,\n              buttonStyle: {\n                backgroundColor: selectedValue === value.value ? 'yellow' : matchedItems.find(function (matchedItem) {\n                  return matchedItem.option === null && matchedItem.value === value.value;\n                }) ? 'orange' : 'white',\n                borderWidth: 1,\n                borderColor: 'black',\n                padding: 16,\n                marginBottom: 8,\n                borderRadius: 8\n              },\n              onPress: function onPress() {\n                return handleMatch(selectedOption, value.value);\n              }\n            }, item.prompt + \"_\" + value.value);\n          })\n        })]\n      })]\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.titleStyle,\n      children: triviaName\n    }), _jsx(FlatList, {\n      data: triviaItems,\n      renderItem: renderItem,\n      keyExtractor: function keyExtractor(item) {\n        return item.prompt;\n      }\n    }), _jsx(View, {\n      style: styles.checkContainer,\n      children: _jsx(Button, {\n        title: \"Check Answers\",\n        titleStyle: styles.checkTitleStyle,\n        buttonStyle: styles.checkStyle,\n        onPress: handleCheckAnswers\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#190840',\n    padding: 16\n  },\n  matchingContainer: {\n    marginBottom: 16\n  },\n  promptStyle: {\n    fontSize: 25,\n    color: 'white',\n    marginBottom: 50\n  },\n  titleStyle: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    marginBottom: 16,\n    color: 'white'\n  },\n  checkContainer: {\n    marginTop: 16\n  },\n  checkStyle: {\n    backgroundColor: '#26A646',\n    height: 60,\n    borderRadius: 10\n  },\n  checkTitleStyle: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  optionStyle: {\n    textAlign: 'center',\n    color: 'black'\n  },\n  valueStyle: {\n    textAlign: 'center',\n    color: 'black'\n  }\n});","map":{"version":3,"names":["React","useState","Text","Button","View","FlatList","StyleSheet","jsx","_jsx","jsxs","_jsxs","Matching","_ref","route","_route$params","params","triviaName","triviaItems","_useState","_useState2","_slicedToArray","matchedItems","setMatchedItems","_useState3","_useState4","selectedOption","setSelectedOption","_useState5","_useState6","selectedValue","setSelectedValue","handleMatch","option","value","index","matchedItemIndex","findIndex","item","updatedMatchedItems","_toConsumableArray","concat","handleCheckAnswers","isAllMatched","length","isAllCorrect","every","filter","t","result","navigation","navigate","alert","renderItem","_ref2","style","styles","matchingContainer","children","promptStyle","prompt","flexDirection","justifyContent","flex","marginRight","answer","map","titleStyle","optionStyle","title","buttonStyle","backgroundColor","find","matchedItem","borderWidth","borderColor","padding","marginBottom","borderRadius","onPress","marginLeft","valueStyle","container","data","keyExtractor","checkContainer","checkTitleStyle","checkStyle","create","fontSize","color","fontWeight","marginTop","height","textAlign"],"sources":["/Users/arianagarciafundora/Desktop/todo-app/src/components/Matching/Matching.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { Text, Button } from '@rneui/themed'\nimport { View, FlatList, StyleSheet } from 'react-native'\n\n\nexport default function Matching({ route }) {\n  const { triviaName, triviaItems } = route.params\n\n  const [matchedItems, setMatchedItems] = useState([])\n  const [selectedOption, setSelectedOption] = useState(null)\n  const [selectedValue, setSelectedValue] = useState(null)\n\n  const handleMatch = (option, value, index) => {\n  const matchedItemIndex = matchedItems.findIndex(item => item.index === index);\n  if (matchedItemIndex >= 0) {\n    // Update existing matched item\n    const updatedMatchedItems = [...matchedItems];\n    updatedMatchedItems[matchedItemIndex] = { option, value, index };\n    setMatchedItems(updatedMatchedItems);\n  } else {\n    // Add new matched item\n    setMatchedItems([...matchedItems, { option, value, index }]);\n  }\n  setSelectedOption(null);\n  setSelectedValue(null);\n}\n\n  const handleCheckAnswers = () => {\n    const isAllMatched = matchedItems.length === triviaItems.length\n    if (isAllMatched) {\n      const isAllCorrect = matchedItems.every(\n        (item) =>\n          triviaItems.filter(\n            (t) => t.option === item.option && t.value === item.value\n          ).length > 0\n      );\n      const result = {\n        matchedItems: matchedItems,\n        isAllCorrect: isAllCorrect\n      };\n      navigation.navigate('Summary', { result })\n    } else {\n      alert('Not all items are matched.')\n    }\n  }\n\n  const renderItem = ({ item }) => (\n    <View style={styles.matchingContainer}>\n      <Text style={styles.promptStyle}>\n        {item.prompt}\n      </Text>\n      <View style={{ flexDirection: 'row', justifyContent: 'space-between' }}>\n        <View style={{ flex: 1, marginRight: 8 }}>\n          {item.answer.map((option, index) => (\n            <Button\n              key={`${item.prompt}_${option.option}`}\n              titleStyle= {styles.optionStyle}\n              title = {option.option}\n              buttonStyle={{\n                backgroundColor:\n                  selectedOption === option.option ? 'yellow' : matchedItems.find(\n                      (matchedItem) =>\n                        matchedItem.option === option.option &&\n                        matchedItem.value === null\n                    )\n                    ? 'orange'\n                    : 'white',\n                borderWidth: 1,\n                borderColor: 'black',\n                padding: 16,\n                marginBottom: 8,\n                borderRadius: 8\n              }}\n              onPress={() => handleMatch(option.option, selectedValue, index)}\n            />\n          ))}\n        </View>\n        <View style={{ flex: 1, marginLeft: 8 }}>\n          {item.answer.map((value, index) => (\n            <Button\n              key={`${item.prompt}_${value.value}`}\n              title = {value.value}\n              titleStyle={styles.valueStyle}\n              buttonStyle={{\n                backgroundColor:\n                  selectedValue === value.value ? 'yellow' : matchedItems.find(\n                      (matchedItem) =>\n                        matchedItem.option === null &&\n                        matchedItem.value === value.value\n                    )\n                  ? 'orange'\n                  : 'white',\n                borderWidth: 1,\n                borderColor: 'black',\n                padding: 16,\n                marginBottom: 8,\n                borderRadius: 8\n              }}\n              onPress={() => handleMatch(selectedOption, value.value)}>\n            </Button>\n          ))}\n        </View>\n      </View>\n    </View>\n  )\n\n  return (\n    <View style={styles.container}>\n      <Text \n        style={styles.titleStyle}>\n          {triviaName}\n      </Text>\n      <FlatList \n        data={triviaItems} \n        renderItem={renderItem} \n        keyExtractor={(item) => item.prompt} \n      />\n      <View style={styles.checkContainer}>\n        <Button \n          title=\"Check Answers\" \n          titleStyle={styles.checkTitleStyle}\n          buttonStyle= {styles.checkStyle}\n          onPress={handleCheckAnswers} \n        />\n      </View>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#190840' ,\n    padding: 16\n  },\n  matchingContainer: {\n    marginBottom: 16\n  },\n  promptStyle: {\n    fontSize: 25, \n    color: 'white',\n    marginBottom: 50\n  },\n  titleStyle: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    marginBottom: 16,\n    color: 'white'\n  },\n  checkContainer: {\n    marginTop: 16\n  },\n  checkStyle: {\n    backgroundColor: '#26A646',\n    height: 60,\n    borderRadius: 10\n  },\n  checkTitleStyle: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  optionStyle: {\n    textAlign: 'center',\n    color: 'black'\n  },\n  valueStyle: {\n    textAlign: 'center',\n    color: 'black'\n  }\n  \n})\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,EAAEC,MAAM,QAAQ,eAAe;AAAA,OAAAC,IAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,UAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAI5C,eAAe,SAASC,QAAQA,CAAAC,IAAA,EAAY;EAAA,IAATC,KAAK,GAAAD,IAAA,CAALC,KAAK;EACtC,IAAAC,aAAA,GAAoCD,KAAK,CAACE,MAAM;IAAxCC,UAAU,GAAAF,aAAA,CAAVE,UAAU;IAAEC,WAAW,GAAAH,aAAA,CAAXG,WAAW;EAE/B,IAAAC,SAAA,GAAwCjB,QAAQ,CAAC,EAAE,CAAC;IAAAkB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA7CG,YAAY,GAAAF,UAAA;IAAEG,eAAe,GAAAH,UAAA;EACpC,IAAAI,UAAA,GAA4CtB,QAAQ,CAAC,IAAI,CAAC;IAAAuB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAnDE,cAAc,GAAAD,UAAA;IAAEE,iBAAiB,GAAAF,UAAA;EACxC,IAAAG,UAAA,GAA0C1B,QAAQ,CAAC,IAAI,CAAC;IAAA2B,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAAjDE,aAAa,GAAAD,UAAA;IAAEE,gBAAgB,GAAAF,UAAA;EAEtC,IAAMG,WAAW,GAAG,SAAdA,WAAWA,CAAIC,MAAM,EAAEC,KAAK,EAAEC,KAAK,EAAK;IAC9C,IAAMC,gBAAgB,GAAGd,YAAY,CAACe,SAAS,CAAC,UAAAC,IAAI;MAAA,OAAIA,IAAI,CAACH,KAAK,KAAKA,KAAK;IAAA,EAAC;IAC7E,IAAIC,gBAAgB,IAAI,CAAC,EAAE;MAEzB,IAAMG,mBAAmB,GAAAC,kBAAA,CAAOlB,YAAY,CAAC;MAC7CiB,mBAAmB,CAACH,gBAAgB,CAAC,GAAG;QAAEH,MAAM,EAANA,MAAM;QAAEC,KAAK,EAALA,KAAK;QAAEC,KAAK,EAALA;MAAM,CAAC;MAChEZ,eAAe,CAACgB,mBAAmB,CAAC;IACtC,CAAC,MAAM;MAELhB,eAAe,IAAAkB,MAAA,CAAAD,kBAAA,CAAKlB,YAAY,IAAE;QAAEW,MAAM,EAANA,MAAM;QAAEC,KAAK,EAALA,KAAK;QAAEC,KAAK,EAALA;MAAM,CAAC,GAAE;IAC9D;IACAR,iBAAiB,CAAC,IAAI,CAAC;IACvBI,gBAAgB,CAAC,IAAI,CAAC;EACxB,CAAC;EAEC,IAAMW,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAA,EAAS;IAC/B,IAAMC,YAAY,GAAGrB,YAAY,CAACsB,MAAM,KAAK1B,WAAW,CAAC0B,MAAM;IAC/D,IAAID,YAAY,EAAE;MAChB,IAAME,YAAY,GAAGvB,YAAY,CAACwB,KAAK,CACrC,UAACR,IAAI;QAAA,OACHpB,WAAW,CAAC6B,MAAM,CAChB,UAACC,CAAC;UAAA,OAAKA,CAAC,CAACf,MAAM,KAAKK,IAAI,CAACL,MAAM,IAAIe,CAAC,CAACd,KAAK,KAAKI,IAAI,CAACJ,KAAK;QAAA,EAC1D,CAACU,MAAM,GAAG,CAAC;MAAA,EACf;MACD,IAAMK,MAAM,GAAG;QACb3B,YAAY,EAAEA,YAAY;QAC1BuB,YAAY,EAAEA;MAChB,CAAC;MACDK,UAAU,CAACC,QAAQ,CAAC,SAAS,EAAE;QAAEF,MAAM,EAANA;MAAO,CAAC,CAAC;IAC5C,CAAC,MAAM;MACLG,KAAK,CAAC,4BAA4B,CAAC;IACrC;EACF,CAAC;EAED,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAAC,KAAA;IAAA,IAAMhB,IAAI,GAAAgB,KAAA,CAAJhB,IAAI;IAAA,OACxB3B,KAAA,CAACN,IAAI;MAACkD,KAAK,EAAEC,MAAM,CAACC,iBAAkB;MAAAC,QAAA,GACpCjD,IAAA,CAACN,IAAI;QAACoD,KAAK,EAAEC,MAAM,CAACG,WAAY;QAAAD,QAAA,EAC7BpB,IAAI,CAACsB;MAAM,EACP,EACPjD,KAAA,CAACN,IAAI;QAACkD,KAAK,EAAE;UAAEM,aAAa,EAAE,KAAK;UAAEC,cAAc,EAAE;QAAgB,CAAE;QAAAJ,QAAA,GACrEjD,IAAA,CAACJ,IAAI;UAACkD,KAAK,EAAE;YAAEQ,IAAI,EAAE,CAAC;YAAEC,WAAW,EAAE;UAAE,CAAE;UAAAN,QAAA,EACtCpB,IAAI,CAAC2B,MAAM,CAACC,GAAG,CAAC,UAACjC,MAAM,EAAEE,KAAK;YAAA,OAC7B1B,IAAA,CAACL,MAAM;cAEL+D,UAAU,EAAGX,MAAM,CAACY,WAAY;cAChCC,KAAK,EAAIpC,MAAM,CAACA,MAAO;cACvBqC,WAAW,EAAE;gBACXC,eAAe,EACb7C,cAAc,KAAKO,MAAM,CAACA,MAAM,GAAG,QAAQ,GAAGX,YAAY,CAACkD,IAAI,CAC3D,UAACC,WAAW;kBAAA,OACVA,WAAW,CAACxC,MAAM,KAAKA,MAAM,CAACA,MAAM,IACpCwC,WAAW,CAACvC,KAAK,KAAK,IAAI;gBAAA,EAC7B,GACC,QAAQ,GACR,OAAO;gBACbwC,WAAW,EAAE,CAAC;gBACdC,WAAW,EAAE,OAAO;gBACpBC,OAAO,EAAE,EAAE;gBACXC,YAAY,EAAE,CAAC;gBACfC,YAAY,EAAE;cAChB,CAAE;cACFC,OAAO,EAAE,SAAAA,QAAA;gBAAA,OAAM/C,WAAW,CAACC,MAAM,CAACA,MAAM,EAAEH,aAAa,EAAEK,KAAK,CAAC;cAAA;YAAC,GAlBxDG,IAAI,CAACsB,MAAM,SAAI3B,MAAM,CAACA,MAAM,CAmBpC;UAAA,CACH;QAAC,EACG,EACPxB,IAAA,CAACJ,IAAI;UAACkD,KAAK,EAAE;YAAEQ,IAAI,EAAE,CAAC;YAAEiB,UAAU,EAAE;UAAE,CAAE;UAAAtB,QAAA,EACrCpB,IAAI,CAAC2B,MAAM,CAACC,GAAG,CAAC,UAAChC,KAAK,EAAEC,KAAK;YAAA,OAC5B1B,IAAA,CAACL,MAAM;cAELiE,KAAK,EAAInC,KAAK,CAACA,KAAM;cACrBiC,UAAU,EAAEX,MAAM,CAACyB,UAAW;cAC9BX,WAAW,EAAE;gBACXC,eAAe,EACbzC,aAAa,KAAKI,KAAK,CAACA,KAAK,GAAG,QAAQ,GAAGZ,YAAY,CAACkD,IAAI,CACxD,UAACC,WAAW;kBAAA,OACVA,WAAW,CAACxC,MAAM,KAAK,IAAI,IAC3BwC,WAAW,CAACvC,KAAK,KAAKA,KAAK,CAACA,KAAK;gBAAA,EACpC,GACD,QAAQ,GACR,OAAO;gBACXwC,WAAW,EAAE,CAAC;gBACdC,WAAW,EAAE,OAAO;gBACpBC,OAAO,EAAE,EAAE;gBACXC,YAAY,EAAE,CAAC;gBACfC,YAAY,EAAE;cAChB,CAAE;cACFC,OAAO,EAAE,SAAAA,QAAA;gBAAA,OAAM/C,WAAW,CAACN,cAAc,EAAEQ,KAAK,CAACA,KAAK,CAAC;cAAA;YAAC,GAlBhDI,IAAI,CAACsB,MAAM,SAAI1B,KAAK,CAACA,KAAK,CAmB3B;UAAA,CACV;QAAC,EACG;MAAA,EACF;IAAA,EACF;EAAA,CACR;EAED,OACEvB,KAAA,CAACN,IAAI;IAACkD,KAAK,EAAEC,MAAM,CAAC0B,SAAU;IAAAxB,QAAA,GAC5BjD,IAAA,CAACN,IAAI;MACHoD,KAAK,EAAEC,MAAM,CAACW,UAAW;MAAAT,QAAA,EACtBzC;IAAU,EACR,EACPR,IAAA,CAACH,QAAQ;MACP6E,IAAI,EAAEjE,WAAY;MAClBmC,UAAU,EAAEA,UAAW;MACvB+B,YAAY,EAAE,SAAAA,aAAC9C,IAAI;QAAA,OAAKA,IAAI,CAACsB,MAAM;MAAA;IAAC,EACpC,EACFnD,IAAA,CAACJ,IAAI;MAACkD,KAAK,EAAEC,MAAM,CAAC6B,cAAe;MAAA3B,QAAA,EACjCjD,IAAA,CAACL,MAAM;QACLiE,KAAK,EAAC,eAAe;QACrBF,UAAU,EAAEX,MAAM,CAAC8B,eAAgB;QACnChB,WAAW,EAAGd,MAAM,CAAC+B,UAAW;QAChCR,OAAO,EAAErC;MAAmB;IAC5B,EACG;EAAA,EACF;AAEX;AAEA,IAAMc,MAAM,GAAGjD,UAAU,CAACiF,MAAM,CAAC;EAC/BN,SAAS,EAAE;IACTnB,IAAI,EAAE,CAAC;IACPQ,eAAe,EAAE,SAAS;IAC1BK,OAAO,EAAE;EACX,CAAC;EACDnB,iBAAiB,EAAE;IACjBoB,YAAY,EAAE;EAChB,CAAC;EACDlB,WAAW,EAAE;IACX8B,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE,OAAO;IACdb,YAAY,EAAE;EAChB,CAAC;EACDV,UAAU,EAAE;IACVsB,QAAQ,EAAE,EAAE;IACZE,UAAU,EAAE,MAAM;IAClBd,YAAY,EAAE,EAAE;IAChBa,KAAK,EAAE;EACT,CAAC;EACDL,cAAc,EAAE;IACdO,SAAS,EAAE;EACb,CAAC;EACDL,UAAU,EAAE;IACVhB,eAAe,EAAE,SAAS;IAC1BsB,MAAM,EAAE,EAAE;IACVf,YAAY,EAAE;EAChB,CAAC;EACDQ,eAAe,EAAE;IACfG,QAAQ,EAAE,EAAE;IACZE,UAAU,EAAE;EACd,CAAC;EACDvB,WAAW,EAAE;IACX0B,SAAS,EAAE,QAAQ;IACnBJ,KAAK,EAAE;EACT,CAAC;EACDT,UAAU,EAAE;IACVa,SAAS,EAAE,QAAQ;IACnBJ,KAAK,EAAE;EACT;AAEF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}